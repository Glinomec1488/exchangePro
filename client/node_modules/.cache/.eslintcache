[{"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\index.tsx":"1","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\App.tsx":"2","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\store\\index.ts":"3","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\store\\hooks.ts":"4","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\store\\slices\\exchange.ts":"5","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\helpers\\index.ts":"6","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\config\\navigation\\index.tsx":"7","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\utils\\index.ts":"8","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\components\\footer\\index.tsx":"9","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\components\\chat\\index.tsx":"10","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\components\\header\\index.tsx":"11","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\order\\index.tsx":"12","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\index.tsx":"13","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\components\\chat\\useChat.ts":"14","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\hooks\\useOrderInfo.ts":"15","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\components\\header\\config\\links.ts":"16","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\howExchange\\index.tsx":"17","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\about\\index.tsx":"18","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\index.tsx":"19","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\support\\index.tsx":"20","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\txHistory\\index.tsx":"21","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\config\\index.ts":"22","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\txHistory\\useHistory.ts":"23","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\howExchange\\components\\walletBonus\\index.tsx":"24","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\currencyDropdown\\index.tsx":"25","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\index.tsx":"26","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\currenciesList\\index.tsx":"27","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\hooks\\useCurrency.ts":"28","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\hooks\\useForm.ts":"29","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\hooks\\useExchangeRate.ts":"30","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\howExchange\\components\\walletBonus\\enum\\index.ts":"31","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\howExchange\\components\\walletBonus\\helpers\\index.ts":"32","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\currenciesList\\helpers\\index.ts":"33","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\email\\index.tsx":"34","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\captcha\\index.tsx":"35","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\referalCode\\index.tsx":"36","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\receiver\\index.tsx":"37"},{"size":451,"mtime":1729017894758,"results":"38","hashOfConfig":"39"},{"size":712,"mtime":1729017894731,"results":"40","hashOfConfig":"39"},{"size":298,"mtime":1729017894772,"results":"41","hashOfConfig":"39"},{"size":301,"mtime":1729017894772,"results":"42","hashOfConfig":"39"},{"size":3555,"mtime":1729017894773,"results":"43","hashOfConfig":"39"},{"size":1298,"mtime":1729017894756,"results":"44","hashOfConfig":"39"},{"size":845,"mtime":1729017894756,"results":"45","hashOfConfig":"39"},{"size":177,"mtime":1729017894773,"results":"46","hashOfConfig":"39"},{"size":975,"mtime":1729040011656,"results":"47","hashOfConfig":"39"},{"size":1041,"mtime":1729039421573,"results":"48","hashOfConfig":"39"},{"size":4616,"mtime":1729040723525,"results":"49","hashOfConfig":"39"},{"size":5335,"mtime":1729038385040,"results":"50","hashOfConfig":"39"},{"size":479,"mtime":1729017894771,"results":"51","hashOfConfig":"39"},{"size":1566,"mtime":1729024620980,"results":"52","hashOfConfig":"39"},{"size":1271,"mtime":1729017894757,"results":"53","hashOfConfig":"39"},{"size":330,"mtime":1729017894754,"results":"54","hashOfConfig":"39"},{"size":3219,"mtime":1729017894769,"results":"55","hashOfConfig":"39"},{"size":1645,"mtime":1729017894760,"results":"56","hashOfConfig":"39"},{"size":2034,"mtime":1729017894767,"results":"57","hashOfConfig":"39"},{"size":929,"mtime":1729017894769,"results":"58","hashOfConfig":"39"},{"size":8299,"mtime":1729017894770,"results":"59","hashOfConfig":"39"},{"size":126,"mtime":1729017894755,"results":"60","hashOfConfig":"39"},{"size":1855,"mtime":1729017894771,"results":"61","hashOfConfig":"39"},{"size":1845,"mtime":1729017894769,"results":"62","hashOfConfig":"39"},{"size":2469,"mtime":1729017894762,"results":"63","hashOfConfig":"39"},{"size":3579,"mtime":1729017894766,"results":"64","hashOfConfig":"39"},{"size":1777,"mtime":1729017894761,"results":"65","hashOfConfig":"39"},{"size":628,"mtime":1729017894766,"results":"66","hashOfConfig":"39"},{"size":2407,"mtime":1729017894766,"results":"67","hashOfConfig":"39"},{"size":4518,"mtime":1729017894765,"results":"68","hashOfConfig":"39"},{"size":128,"mtime":1729017894768,"results":"69","hashOfConfig":"39"},{"size":741,"mtime":1729017894768,"results":"70","hashOfConfig":"39"},{"size":591,"mtime":1729017894761,"results":"71","hashOfConfig":"39"},{"size":817,"mtime":1729017894764,"results":"72","hashOfConfig":"39"},{"size":2053,"mtime":1729017894763,"results":"73","hashOfConfig":"39"},{"size":724,"mtime":1729017894765,"results":"74","hashOfConfig":"39"},{"size":1082,"mtime":1729017894764,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"1w4vs4k",{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"79"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"79"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"79"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"79"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"79"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"79"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"79"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"79"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\index.tsx",[],[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\App.tsx",["197"],[],"import React, { useEffect } from 'react';\r\nimport AppRouter from './config/navigation';\r\nimport { chechUserId, getCurrencies } from './helpers';\r\nimport { useAppDispatch, useAppSelector } from './store/hooks';\r\nimport { dispatchCurrencies } from './store/slices/exchange';\r\n\r\nconst App = () => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    chechUserId()\r\n    getCurrencies().then(res => {\r\n      if (res) {\r\n        dispatch(dispatchCurrencies(res))\r\n      }\r\n    })\r\n  })\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {/* <div className=\"preloader\">\r\n        <div className=\"preloader__circle\"></div>\r\n      </div> */}\r\n      <AppRouter />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\store\\index.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\store\\hooks.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\store\\slices\\exchange.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\helpers\\index.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\config\\navigation\\index.tsx",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\utils\\index.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\components\\footer\\index.tsx",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\components\\chat\\index.tsx",["198","199","200","201","202","203","204","205"],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\components\\header\\index.tsx",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\order\\index.tsx",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\index.tsx",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\components\\chat\\useChat.ts",["206"],[],"import { useState, useEffect, useCallback } from \"react\";\r\nimport { Message } from \"react-simple-chat\";\r\nimport { serveUrl } from \"../../config\";\r\n\r\nconst useChat = () => {\r\n  const [messages, setMessages] = useState<Message[]>([\r\n    {\r\n      id: 1,\r\n      text: \"Hello my friend!\",\r\n      createdAt: \"2021-07-21 12:09:12\",\r\n      user: {\r\n        id: 1,\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Hello!\",\r\n      createdAt: \"2021-07-21 14:09:12\",\r\n      user: {\r\n        id: 2,\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const getHistoy = async () => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    const history = await fetch(`${serveUrl}/msgHistory/${userId}`).then(\r\n      (res) => res.json()\r\n    );\r\n\r\n    if (history.length > 0) {\r\n      setMessages(\r\n        history.map((elem: any) => ({\r\n          id: elem.id,\r\n          text: elem.text,\r\n          createdAt: elem.timestamp,\r\n          user: {\r\n            id: elem.user === \"true\" ? 2 : 1,\r\n          },\r\n        }))\r\n      );\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (message: Message) => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const timestamp = new Date().getTime();\r\n    await fetch(\r\n      `${serveUrl}/msgSave/${message.text}/${userId}/${timestamp}/true`,\r\n      {\r\n        method: \"POST\",\r\n      }\r\n    );\r\n\r\n    getHistoy();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      getHistoy();\r\n    }, 5000);\r\n\r\n    return () => clearInterval(timer);\r\n  });\r\n\r\n  return {\r\n    messages,\r\n    sendMessage,\r\n  };\r\n};\r\n\r\nexport default useChat;\r\n","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\hooks\\useOrderInfo.ts",["207","208"],[],"import { useEffect, useState } from \"react\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport { serveUrl } from \"../config\"\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\"\r\nimport { dispatchOrder } from \"../store/slices/exchange\"\r\n\r\nconst useOrderInfo = () => {\r\n    const { orderId } = useParams()\r\n\r\n    const order = useAppSelector(state => state.exchange.orderInfo)\r\n    const dispatch = useAppDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const getOrder = async () => {\r\n        const order = await fetch(`${serveUrl}/order/${orderId}`).then(res => res.json())\r\n\r\n        if (order.error) {\r\n            navigate('/')\r\n        }\r\n\r\n        dispatch(dispatchOrder(order))\r\n    }\r\n\r\n    const confirmOrder = async () => {\r\n        try {\r\n            await fetch(`${serveUrl}/confirm/${orderId}`, {\r\n                method: 'POST'\r\n            }).then(res => res.json())\r\n            window.location.reload()\r\n        } catch (error: any) {\r\n            console.error(error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!order) {\r\n            getOrder()\r\n        }\r\n    }, [orderId])\r\n\r\n    return {\r\n        orderInfo: order,\r\n        orderId,\r\n        confirmOrder,\r\n    }\r\n}\r\n\r\nexport default useOrderInfo","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\components\\header\\config\\links.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\howExchange\\index.tsx",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\about\\index.tsx",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\index.tsx",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\support\\index.tsx",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\txHistory\\index.tsx",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\config\\index.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\txHistory\\useHistory.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\howExchange\\components\\walletBonus\\index.tsx",["209"],[],"import { wait } from \"@testing-library/user-event/dist/utils\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { WalletBonusEnum } from \"./enum\"\r\nimport { chechWalletBonus, getButtonStyles, getButtonText } from \"./helpers\"\r\n\r\nconst WalletBonus = () => {\r\n    const [address, setAddress] = useState('')\r\n    const [isPending, setIsPending] = useState(false)\r\n    const [buttonStatus, setButtonStatus] = useState(WalletBonusEnum.Default)\r\n\r\n    const handleRequest = async () => {\r\n        setIsPending(true)\r\n\r\n        const isValidAddress = chechWalletBonus(address)\r\n\r\n        await wait(1500)\r\n\r\n        if (!isValidAddress) {\r\n            setButtonStatus(WalletBonusEnum.Denied)\r\n        } else {\r\n            setButtonStatus(WalletBonusEnum.Confirmed)\r\n        }\r\n        \r\n        setIsPending(false)\r\n        await wait(1500)\r\n        setButtonStatus(WalletBonusEnum.Default)\r\n    }\r\n\r\n    return (\r\n        <div className=\"how-exchange__block\">\r\n            <div className=\"how-exchange__block-step\">\r\n                Step #1\r\n            </div>\r\n            <h4 className=\"how-exchange__block-title\">\r\n                Check your wallet for 15% bonus!\r\n            </h4>\r\n            <div className=\"how-exchange__block-text\">\r\n                Enter your address to receive bonus!\r\n            </div>\r\n            <input\r\n                className=\"how-exchange__block-input\"\r\n                type=\"text\"\r\n                placeholder=\"Any coin address\"\r\n                value={address}\r\n                onChange={e => setAddress(e.target.value)}\r\n            />\r\n            <button onClick={() => handleRequest()} className={getButtonStyles(buttonStatus)}>\r\n                {\r\n                    getButtonText(buttonStatus, isPending)\r\n                }\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WalletBonus","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\currencyDropdown\\index.tsx",["210"],[],"import { useState } from 'react'\r\nimport './styles.css'\r\nimport arrow from '../../../../../../assets/drop_arrow.svg'\r\nimport { getActiveCurrencyStyle } from '../currenciesList/helpers'\r\nimport { useAppSelector } from '../../../../../../store/hooks'\r\nimport { ICurrency } from '../../../../../../interfaces'\r\nimport { getEnv } from '../../../../../../utils'\r\nimport useCurrency from '../../hooks/useCurrency'\r\n\r\ninterface IProps {\r\n    isTo: boolean,\r\n}\r\n\r\nconst CurrencyDropDown = ({\r\n    isTo,\r\n}: IProps) => {\r\n    const [isActive, setIsActive] = useState(false)\r\n\r\n    const {\r\n        // currencies,\r\n        setFromCurrency,\r\n        setToCurrency,\r\n    } = useCurrency()\r\n\r\n    const toCurrency = useAppSelector(state => state.exchange.toCurrency)\r\n    const fromCurrency = useAppSelector(state => state.exchange.fromCurrency)\r\n    const currencies = useAppSelector(state => state.exchange.currencies)\r\n\r\n    const handleSelectCurrency = (shortName: string, fullName: string) => {\r\n        if (isTo && fromCurrency.fullName !== fullName) {\r\n            setToCurrency(shortName, fullName)\r\n        }\r\n        if (!isTo && toCurrency.fullName !== fullName) {\r\n            setFromCurrency(shortName, fullName)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='drop_container'>\r\n            <div onClick={() => setIsActive(prev => !prev)} className='exchange__block-title'>\r\n                YOU SEND\r\n                <img src={arrow} alt=\"\" />\r\n            </div>\r\n            <div\r\n                className={\r\n                    isActive\r\n                        ? 'dropdown dropdown_active'\r\n                        : 'dropdown'\r\n                }\r\n            >\r\n                {\r\n                    currencies && currencies.map(currency => (\r\n                        <div\r\n                            key={currency.fullName}\r\n                            onClick={() => handleSelectCurrency(currency.shortName, currency.fullName)}\r\n                            className={`exchange__block-item exchange__block-item-send ${getActiveCurrencyStyle(isTo, currency.fullName, fromCurrency.fullName, toCurrency.fullName)}`}\r\n                        >\r\n                            <img src={`${getEnv(process.env.REACT_APP_SERVER_URL, 'REACT_APP_SERVER_URL')}/static/${currency.imageUrlP}.svg`} alt=\"\" />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrencyDropDown","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\index.tsx",["211"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useAppSelector } from \"../../../../../../store/hooks\";\r\nimport useExchangeRate from \"./hooks/useExchangeRate\";\r\nimport Captcha from \"./components/captcha\";\r\nimport Email from \"./components/email\";\r\nimport Receiver from \"./components/receiver\";\r\nimport ReferalCode from \"./components/referalCode\";\r\nimport useForm from \"./hooks/useForm\";\r\n\r\nexport const Form = () => {\r\n  const { fromCurrency, toCurrency } = useAppSelector(\r\n    (state) => state.exchange\r\n  );\r\n\r\n  const {\r\n    exchangeRate,\r\n    toCurrencyAmount,\r\n    fromCurrencyAmount,\r\n    setFromCurrencyAmount,\r\n    setToCurrencyAmount,\r\n    setIsChangeInput,\r\n  } = useExchangeRate();\r\n\r\n  const [tempAmount, setTempAmount] = useState<string>(fromCurrencyAmount);\r\n  const [loading, setLoading] = useState<boolean>(true); // Loading state\r\n  const [isValid, setIsValid] = useState<boolean>(true);\r\n\r\n  const validateInput = (amount: string) => {\r\n    const numericAmount = Number(amount);\r\n    const isWithinRange =\r\n      numericAmount >= exchangeRate.fromCurrenycRange.from &&\r\n      numericAmount <= exchangeRate.fromCurrenycRange.to;\r\n\r\n    setIsValid(isWithinRange); // Update isValid based on range check\r\n\r\n    if (isWithinRange) {\r\n      setIsChangeInput(true);\r\n      setFromCurrencyAmount(amount);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      validateInput(tempAmount);\r\n    }); // 2 seconds delay\r\n\r\n    return () => clearTimeout(timer); // Clear the timer on cleanup\r\n  }, [tempAmount]);\r\n\r\n  const { sendForm } = useForm();\r\n\r\n  return (\r\n    <form\r\n      onSubmit={async (e) =>\r\n        await sendForm(e, fromCurrencyAmount, toCurrencyAmount)\r\n      }\r\n      className=\"exchange__block-form\"\r\n    >\r\n      <div className=\"exchange__block-wrapper\">\r\n        <div className=\"exchange__block-text exchange__block-text-send\">\r\n          You send{\" \"}\r\n          <span>\r\n            ({exchangeRate.fromCurrenycRange.from} —{\" \"}\r\n            {exchangeRate.fromCurrenycRange.to})\r\n          </span>\r\n        </div>\r\n        <div className=\"exchange__block-header exchange__block-header-send\">\r\n          {fromCurrency.fullName}\r\n        </div>\r\n        <input\r\n          className=\"exchange__block-input exchange__block-input-val exchange__block-input-send\"\r\n          type=\"number\"\r\n          step=\"any\"\r\n          value={tempAmount}\r\n          onChange={(e) => {\r\n            setTempAmount(e.target.value); // Update temp state on every change\r\n            setLoading(true);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"exchange__block-wrapper\">\r\n        <div className=\"exchange__block-text exchange__block-text-receive\">\r\n          You receive\r\n        </div>\r\n        <div className=\"exchange__block-header exchange__block-header-receive\">\r\n          {toCurrency.fullName}\r\n        </div>\r\n        <input\r\n          className={`exchange__block-input exchange__block-input-val exchange__block-input-receive ${\r\n            loading ? \"loading\" : \"\"\r\n          }`}\r\n          type=\"number\"\r\n          step=\"any\"\r\n          value={toCurrencyAmount}\r\n          onChange={(e) => {\r\n            setIsChangeInput(true);\r\n            setToCurrencyAmount(e.target.value);\r\n          }}\r\n          readOnly\r\n        />\r\n      </div>\r\n      <Receiver />\r\n      <Email />\r\n      <ReferalCode />\r\n      <Captcha />\r\n      <button className=\"exchange__block-btn\" disabled={loading || !isValid}>\r\n        Continue\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\currenciesList\\index.tsx",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\hooks\\useCurrency.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\hooks\\useForm.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\hooks\\useExchangeRate.ts",["212","213","214"],[],"import { useEffect, useState } from \"react\";\r\nimport { serveUrl } from \"../../../../../../../config\";\r\nimport { useAppSelector } from \"../../../../../../../store/hooks\";\r\n\r\nconst getFixedAmount = (amount: number) => {\r\n  if (amount.toFixed(6) === \"0,000000\" || amount.toFixed(6) === \"0.000000\")\r\n    return \"0\";\r\n  return amount.toFixed(7);\r\n};\r\nconst ranges: Record<string, { min: number; max: number }> = {\r\n  BTC: { min: 0.0001, max: 10 },\r\n  ETH: { min: 0.02, max: 100 },\r\n  BNB: { min: 0.08, max: 100 },\r\n  BCH: { min: 0.15, max: 100 },\r\n  ZEC: { min: 1, max: 1488 },\r\n  FTM: { min: 74, max: 1009 },\r\n  SOL: { min: 0.3, max: 1001 },\r\n  LTC: { min: 0.77, max: 1021 },\r\n  TRX: { min: 293, max: 100053 },\r\n  ZRX: { min: 157, max: 100063 },\r\n  XRP: { min: 92, max: 10000 },\r\n  USDT: { min: 44, max: 106051 },\r\n  ADA: { min: 141, max: 100000 },\r\n  XTZ: { min: 72, max: 100067 },\r\n  XMR: { min: 0.3, max: 1055 },\r\n  DASH: { min: 2.1, max: 10083 },\r\n  DOGE: { min: 449, max: 1220000 },\r\n  DOT: { min: 11, max: 100554 },\r\n};\r\n\r\nconst filterShortName = (input: string) => {\r\n  return input.replace(/\\(.*?\\)/g, \"\").trim();\r\n};\r\n\r\nconst useExchangeRate = () => {\r\n  const { fromCurrency, toCurrency } = useAppSelector(\r\n    (state) => state.exchange\r\n  );\r\n\r\n  const [fromCurrencyAmount, setFromCurrencyAmount] = useState(\"\");\r\n  const [toCurrencyAmount, setToCurrencyAmount] = useState(\"\");\r\n  const [isChangeInput, setIsChangeInput] = useState(true);\r\n  const [isChangeToCurrency, setIsChangeToCurrency] = useState(false);\r\n  const [isChangeFromCurrency, setIsChangeFromCurrency] = useState(false);\r\n  const noNetShrtTo = filterShortName(fromCurrency.shortName);\r\n  const noNetShrtFrom = filterShortName(toCurrency.shortName);\r\n  const [minAmount, setMinAmount] = useState(1);\r\n  const [maxAmount, setMaxAmount] = useState(1);\r\n\r\n  const getExchangeRate = async (\r\n    toCurrencyAmount: string,\r\n    fromCurrencyAmount: string,\r\n    isChangeReceiveAmount: boolean\r\n  ) => {\r\n    if (!isChangeInput || !toCurrency.shortName || !fromCurrency.shortName)\r\n      return;\r\n\r\n    const isChange = isChangeReceiveAmount ? \"True\" : \"false\";\r\n    const newForm = await fetch(\r\n      `${serveUrl}/calculator/${noNetShrtTo}/${noNetShrtFrom}/${\r\n        fromCurrencyAmount || \"0.01\"\r\n      }/${toCurrencyAmount || \"0.01\"}/${isChange}`,\r\n      {\r\n        method: \"POST\",\r\n      }\r\n    ).then((res) => res.json());\r\n\r\n    if (isChangeReceiveAmount) {\r\n      setFromCurrencyAmount(getFixedAmount(newForm.amount));\r\n    } else {\r\n      setToCurrencyAmount(getFixedAmount(newForm.amount));\r\n    }\r\n    setIsChangeInput(false);\r\n  };\r\n\r\n  const getFromCurrencyRange = (currency: string) => {\r\n    return ranges[currency] || { min: \"0\", max: \"0\" }; // Default range if currency is not found\r\n  };\r\n\r\n  useEffect(() => {\r\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, false);\r\n  }, [fromCurrencyAmount, isChangeFromCurrency]);\r\n\r\n  useEffect(() => {\r\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, false);\r\n  }, [toCurrencyAmount, isChangeToCurrency]);\r\n\r\n  useEffect(() => {\r\n    setIsChangeInput(true);\r\n    setIsChangeFromCurrency((prev) => !prev);\r\n  }, [fromCurrency]);\r\n\r\n  useEffect(() => {\r\n    setIsChangeInput(true);\r\n    setIsChangeToCurrency((prev) => !prev);\r\n  }, [toCurrency]);\r\n\r\n  useEffect(() => {\r\n    if (noNetShrtTo) {\r\n      const range = getFromCurrencyRange(noNetShrtTo);\r\n      setMinAmount(range.min);\r\n      setMaxAmount(range.max);\r\n    }\r\n  }, [fromCurrency]);\r\n\r\n  const config = {\r\n    fromCurrenycRange: {\r\n      from: minAmount,\r\n      to: maxAmount,\r\n    },\r\n    toCurrenycRange: {\r\n      from: 0,\r\n      to: 0,\r\n    },\r\n  };\r\n\r\n  const changeFromAmount = (amount: string) => {\r\n    if (\r\n      Number(amount) <= config.fromCurrenycRange.to &&\r\n      Number(amount) >= config.fromCurrenycRange.from\r\n    ) {\r\n      setFromCurrencyAmount(amount);\r\n    } else {\r\n      setFromCurrencyAmount(`${config.fromCurrenycRange.from}`);\r\n    }\r\n  };\r\n\r\n  const changeToAmount = (amount: string) => {\r\n    if (\r\n      Number(amount) <= config.toCurrenycRange.to &&\r\n      Number(amount) >= config.toCurrenycRange.from\r\n    ) {\r\n      setToCurrencyAmount(amount);\r\n    } else {\r\n      setToCurrencyAmount(`${config.toCurrenycRange.from}`);\r\n    }\r\n  };\r\n\r\n  return {\r\n    exchangeRate: config,\r\n    fromCurrencyAmount,\r\n    toCurrencyAmount,\r\n    setFromCurrencyAmount: changeFromAmount,\r\n    setToCurrencyAmount: changeToAmount,\r\n    setIsChangeInput,\r\n  };\r\n};\r\n\r\nexport default useExchangeRate;\r\n","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\howExchange\\components\\walletBonus\\enum\\index.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\howExchange\\components\\walletBonus\\helpers\\index.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\currenciesList\\helpers\\index.ts",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\email\\index.tsx",[],[],"C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\captcha\\index.tsx",["215"],[],"import { useEffect, useState } from \"react\"\r\nimport { useAppDispatch, useAppSelector } from \"../../../../../../../../store/hooks\"\r\nimport { dispatchCaptchaResult, generateCaptcha } from \"../../../../../../../../store/slices/exchange\"\r\n\r\nconst Captcha = () => {\r\n    const [result, setResult] = useState('')\r\n\r\n    const {\r\n        num1,\r\n        num2,\r\n        isValid,\r\n    } = useAppSelector(state => state.exchange.captcha)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        if (!num1 && !num2) {\r\n            dispatch(generateCaptcha())\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"exchange__block-wrapper\">\r\n            <div className=\"exchange__block-text\">\r\n                ENTER CAPTCHA\r\n            </div>\r\n            <div className=\"exchange__block-captcha\">\r\n                <input\r\n                    className=\"exchange__block-input exchange__block-input-captcha exchange__block-input-captcha-first-num\"\r\n                    readOnly type=\"number\" value={num1} />\r\n                <div className=\"exchange__block-sign\">+</div>\r\n                <input\r\n                    className=\"exchange__block-input exchange__block-input-captcha exchange__block-input-captcha-second-num\"\r\n                    readOnly type=\"number\" value={num2} />\r\n                <div className=\"exchange__block-sign\">=</div>\r\n                <input\r\n                    className={\r\n                        isValid\r\n                            ? \"exchange__block-input exchange__block-input-captcha exchange__block-input-captcha-sum\"\r\n                            : \"exchange__block-input exchange__block-input-captcha exchange__block-input-captcha-sum exchange_wrong_captcha\"\r\n                    }\r\n                    type=\"number\" value={result} onChange={(e) => {\r\n                        setResult(e.target.value)\r\n                        dispatch(dispatchCaptchaResult(e.target.value))\r\n                    }} name=\"captchaResult\" required />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Captcha","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\referalCode\\index.tsx",["216","217","218","219"],[],"import { useAppDispatch, useAppSelector } from \"../../../../../../../../store/hooks\"\r\nimport { dispatchEmail, dispatchReferalCode } from \"../../../../../../../../store/slices/exchange\"\r\n\r\nconst ReferalCode = () => {\r\n    const referalCode = localStorage.getItem('ref')\r\n\r\n    return (\r\n        <div className=\"exchange__block-wrapper\">\r\n            <div className=\"exchange__block-text\">\r\n                Referral code\r\n            </div>\r\n            <input\r\n                className=\"exchange__block-input\"\r\n                type=\"text\"\r\n                placeholder=\"Referral code\"\r\n                value={referalCode || ''}\r\n                readOnly\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReferalCode","C:\\Users\\1\\Downloads\\fakeex\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\receiver\\index.tsx",[],[],{"ruleId":"220","severity":1,"message":"221","line":4,"column":26,"nodeType":"222","messageId":"223","endLine":4,"endColumn":40},{"ruleId":"220","severity":1,"message":"224","line":1,"column":10,"nodeType":"222","messageId":"223","endLine":1,"endColumn":18},{"ruleId":"220","severity":1,"message":"225","line":1,"column":20,"nodeType":"222","messageId":"223","endLine":1,"endColumn":29},{"ruleId":"220","severity":1,"message":"226","line":2,"column":8,"nodeType":"222","messageId":"223","endLine":2,"endColumn":12},{"ruleId":"220","severity":1,"message":"227","line":2,"column":16,"nodeType":"222","messageId":"223","endLine":2,"endColumn":23},{"ruleId":"220","severity":1,"message":"228","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":16},{"ruleId":"220","severity":1,"message":"229","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":16},{"ruleId":"220","severity":1,"message":"230","line":10,"column":11,"nodeType":"222","messageId":"223","endLine":10,"endColumn":19},{"ruleId":"220","severity":1,"message":"231","line":10,"column":21,"nodeType":"222","messageId":"223","endLine":10,"endColumn":32},{"ruleId":"220","severity":1,"message":"232","line":1,"column":31,"nodeType":"222","messageId":"223","endLine":1,"endColumn":42},{"ruleId":"220","severity":1,"message":"224","line":1,"column":21,"nodeType":"222","messageId":"223","endLine":1,"endColumn":29},{"ruleId":"233","severity":1,"message":"234","line":39,"column":8,"nodeType":"235","endLine":39,"endColumn":17,"suggestions":"236"},{"ruleId":"220","severity":1,"message":"225","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":19},{"ruleId":"220","severity":1,"message":"237","line":6,"column":10,"nodeType":"222","messageId":"223","endLine":6,"endColumn":19},{"ruleId":"233","severity":1,"message":"238","line":49,"column":6,"nodeType":"235","endLine":49,"endColumn":18,"suggestions":"239"},{"ruleId":"233","severity":1,"message":"240","line":82,"column":6,"nodeType":"235","endLine":82,"endColumn":48,"suggestions":"241"},{"ruleId":"233","severity":1,"message":"242","line":86,"column":6,"nodeType":"235","endLine":86,"endColumn":44,"suggestions":"243"},{"ruleId":"233","severity":1,"message":"244","line":104,"column":6,"nodeType":"235","endLine":104,"endColumn":20,"suggestions":"245"},{"ruleId":"233","severity":1,"message":"246","line":20,"column":8,"nodeType":"235","endLine":20,"endColumn":10,"suggestions":"247"},{"ruleId":"220","severity":1,"message":"248","line":1,"column":10,"nodeType":"222","messageId":"223","endLine":1,"endColumn":24},{"ruleId":"220","severity":1,"message":"221","line":1,"column":26,"nodeType":"222","messageId":"223","endLine":1,"endColumn":40},{"ruleId":"220","severity":1,"message":"249","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":23},{"ruleId":"220","severity":1,"message":"250","line":2,"column":25,"nodeType":"222","messageId":"223","endLine":2,"endColumn":44},"@typescript-eslint/no-unused-vars","'useAppSelector' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Chat' is defined but never used.","'Message' is defined but never used.","'chatIcon' is defined but never used.","'sendIcon' is defined but never used.","'messages' is assigned a value but never used.","'sendMessage' is assigned a value but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getOrder' and 'order'. Either include them or remove the dependency array.","ArrayExpression",["251"],"'ICurrency' is defined but never used.","React Hook useEffect has a missing dependency: 'validateInput'. Either include it or remove the dependency array.",["252"],"React Hook useEffect has missing dependencies: 'getExchangeRate' and 'toCurrencyAmount'. Either include them or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'fromCurrencyAmount' and 'getExchangeRate'. Either include them or remove the dependency array.",["254"],"React Hook useEffect has a missing dependency: 'noNetShrtTo'. Either include it or remove the dependency array.",["255"],"React Hook useEffect has missing dependencies: 'dispatch', 'num1', and 'num2'. Either include them or remove the dependency array.",["256"],"'useAppDispatch' is defined but never used.","'dispatchEmail' is defined but never used.","'dispatchReferalCode' is defined but never used.",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},"Update the dependencies array to be: [getOrder, order, orderId]",{"range":"269","text":"270"},"Update the dependencies array to be: [tempAmount, validateInput]",{"range":"271","text":"272"},"Update the dependencies array to be: [fromCurrencyAmount, getExchangeRate, isChangeFromCurrency, toCurrencyAmount]",{"range":"273","text":"274"},"Update the dependencies array to be: [toCurrencyAmount, isChangeToCurrency, getExchangeRate, fromCurrencyAmount]",{"range":"275","text":"276"},"Update the dependencies array to be: [fromCurrency, noNetShrtTo]",{"range":"277","text":"278"},"Update the dependencies array to be: [dispatch, num1, num2]",{"range":"279","text":"280"},[1136,1145],"[getOrder, order, orderId]",[1568,1580],"[tempAmount, validateInput]",[2869,2911],"[fromCurrencyAmount, getExchangeRate, isChangeFromCurrency, toCurrencyAmount]",[3010,3048],"[toCurrencyAmount, isChangeToCurrency, getExchangeRate, fromCurrencyAmount]",[3471,3485],"[fromCurrency, noNetShrtTo]",[584,586],"[dispatch, num1, num2]"]