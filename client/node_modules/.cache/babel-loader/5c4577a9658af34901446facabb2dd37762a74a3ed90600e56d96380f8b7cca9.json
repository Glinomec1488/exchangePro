{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Downloads\\\\fakeex\\\\client\\\\src\\\\screens\\\\home\\\\components\\\\exchange\\\\components\\\\currenciesList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useAppSelector } from \"../../../../../../store/hooks\";\nimport { getEnv } from \"../../../../../../utils\";\nimport useCurrency from \"../../hooks/useCurrency\";\nimport { getActiveCurrencyStyle } from \"./helpers\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrenciesList = _ref => {\n  _s();\n  let {\n    isTo\n  } = _ref;\n  const {\n    setFromCurrency,\n    setToCurrency\n  } = useCurrency();\n  const toCurrency = useAppSelector(state => state.exchange.toCurrency);\n  const fromCurrency = useAppSelector(state => state.exchange.fromCurrency);\n  const currencies = useAppSelector(state => state.exchange.currencies);\n  const handleSelectCurrency = (shortName, fullName) => {\n    if (isTo && fromCurrency.fullName !== fullName) {\n      setToCurrency(shortName, fullName);\n    }\n    if (!isTo && toCurrency.fullName !== fullName) {\n      setFromCurrency(shortName, fullName);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currencies ? currencies.map(currency => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `exchange__block-item exchange__block-item-send ${getActiveCurrencyStyle(isTo, currency.fullName, fromCurrency.fullName, toCurrency.fullName)}`,\n      onClick: () => handleSelectCurrency(currency.shortName, currency.fullName),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${getEnv(process.env.REACT_APP_SERVER_URL, \"REACT_APP_SERVER_URL\")}/static/${currency.imageUrlP}.svg`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this)\n    }, currency.fullName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)) : \"\"\n  }, void 0, false);\n};\n_s(CurrenciesList, \"G7dyueIoYiD0W2IsZ5zl6AyIjzU=\", false, function () {\n  return [useCurrency, useAppSelector, useAppSelector, useAppSelector];\n});\n_c = CurrenciesList;\nexport default CurrenciesList;\nvar _c;\n$RefreshReg$(_c, \"CurrenciesList\");","map":{"version":3,"names":["useAppSelector","getEnv","useCurrency","getActiveCurrencyStyle","CurrenciesList","isTo","setFromCurrency","setToCurrency","toCurrency","state","exchange","fromCurrency","currencies","handleSelectCurrency","shortName","fullName","map","currency","process","env","REACT_APP_SERVER_URL","imageUrlP"],"sources":["C:/Users/1/Downloads/fakeex/client/src/screens/home/components/exchange/components/currenciesList/index.tsx"],"sourcesContent":["import { useAppSelector } from \"../../../../../../store/hooks\";\r\nimport { getEnv } from \"../../../../../../utils\";\r\nimport useCurrency from \"../../hooks/useCurrency\";\r\nimport { getActiveCurrencyStyle } from \"./helpers\";\r\ninterface IProps {\r\n  isTo: boolean;\r\n}\r\n\r\nconst CurrenciesList = ({ isTo }: IProps) => {\r\n  const { setFromCurrency, setToCurrency } = useCurrency();\r\n  const toCurrency = useAppSelector((state) => state.exchange.toCurrency);\r\n  const fromCurrency = useAppSelector((state) => state.exchange.fromCurrency);\r\n  const currencies = useAppSelector((state) => state.exchange.currencies);\r\n  const handleSelectCurrency = (shortName: string, fullName: string) => {\r\n    if (isTo && fromCurrency.fullName !== fullName) {\r\n      setToCurrency(shortName, fullName);\r\n    }\r\n    if (!isTo && toCurrency.fullName !== fullName) {\r\n      setFromCurrency(shortName, fullName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currencies\r\n        ? currencies.map((currency) => (\r\n            <li\r\n              key={currency.fullName}\r\n              className={`exchange__block-item exchange__block-item-send ${getActiveCurrencyStyle(\r\n                isTo,\r\n                currency.fullName,\r\n                fromCurrency.fullName,\r\n                toCurrency.fullName\r\n              )}`}\r\n              onClick={() =>\r\n                handleSelectCurrency(currency.shortName, currency.fullName)\r\n              }\r\n            >\r\n              <img\r\n                src={`${getEnv(\r\n                  process.env.REACT_APP_SERVER_URL,\r\n                  \"REACT_APP_SERVER_URL\"\r\n                )}/static/${currency.imageUrlP}.svg`}\r\n                alt=\"\"\r\n              />\r\n            </li>\r\n          ))\r\n        : \"\"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrenciesList;\r\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,MAAM,QAAQ,yBAAyB;AAChD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,sBAAsB,QAAQ,WAAW;AAAC;AAAA;AAKnD,MAAMC,cAAc,GAAG,QAAsB;EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC;EACtC,MAAM;IAAEC,eAAe;IAAEC;EAAc,CAAC,GAAGL,WAAW,EAAE;EACxD,MAAMM,UAAU,GAAGR,cAAc,CAAES,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACF,UAAU,CAAC;EACvE,MAAMG,YAAY,GAAGX,cAAc,CAAES,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACC,YAAY,CAAC;EAC3E,MAAMC,UAAU,GAAGZ,cAAc,CAAES,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACE,UAAU,CAAC;EACvE,MAAMC,oBAAoB,GAAG,CAACC,SAAiB,EAAEC,QAAgB,KAAK;IACpE,IAAIV,IAAI,IAAIM,YAAY,CAACI,QAAQ,KAAKA,QAAQ,EAAE;MAC9CR,aAAa,CAACO,SAAS,EAAEC,QAAQ,CAAC;IACpC;IACA,IAAI,CAACV,IAAI,IAAIG,UAAU,CAACO,QAAQ,KAAKA,QAAQ,EAAE;MAC7CT,eAAe,CAACQ,SAAS,EAAEC,QAAQ,CAAC;IACtC;EACF,CAAC;EAED,oBACE;IAAA,UACGH,UAAU,GACPA,UAAU,CAACI,GAAG,CAAEC,QAAQ,iBACtB;MAEE,SAAS,EAAG,kDAAiDd,sBAAsB,CACjFE,IAAI,EACJY,QAAQ,CAACF,QAAQ,EACjBJ,YAAY,CAACI,QAAQ,EACrBP,UAAU,CAACO,QAAQ,CACnB,EAAE;MACJ,OAAO,EAAE,MACPF,oBAAoB,CAACI,QAAQ,CAACH,SAAS,EAAEG,QAAQ,CAACF,QAAQ,CAC3D;MAAA,uBAED;QACE,GAAG,EAAG,GAAEd,MAAM,CACZiB,OAAO,CAACC,GAAG,CAACC,oBAAoB,EAChC,sBAAsB,CACtB,WAAUH,QAAQ,CAACI,SAAU,MAAM;QACrC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA;IACN,GAjBGJ,QAAQ,CAACF,QAAQ;MAAA;MAAA;MAAA;IAAA,QAmBzB,CAAC,GACF;EAAE,iBACL;AAEP,CAAC;AAAC,GA1CIX,cAAc;EAAA,QACyBF,WAAW,EACnCF,cAAc,EACZA,cAAc,EAChBA,cAAc;AAAA;AAAA,KAJ7BI,cAAc;AA4CpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}