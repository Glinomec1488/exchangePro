{"ast":null,"code":"import{wait}from\"@testing-library/user-event/dist/utils\";import{useState}from\"react\";import{WalletBonusEnum}from\"./enum\";import{chechWalletBonus,getButtonStyles,getButtonText}from\"./helpers\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WalletBonus=()=>{const[address,setAddress]=useState('');const[isPending,setIsPending]=useState(false);const[buttonStatus,setButtonStatus]=useState(WalletBonusEnum.Default);const handleRequest=async()=>{setIsPending(true);const isValidAddress=chechWalletBonus(address);await wait(1500);if(!isValidAddress){setButtonStatus(WalletBonusEnum.Denied);}else{setButtonStatus(WalletBonusEnum.Confirmed);}setIsPending(false);await wait(1500);setButtonStatus(WalletBonusEnum.Default);};return/*#__PURE__*/_jsxs(\"div\",{className:\"how-exchange__block\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"how-exchange__block-step\",children:\"Step #1\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"how-exchange__block-title\",children:\"Check your wallet for 15% bonus!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"how-exchange__block-text\",children:\"Enter your address to receive bonus!\"}),/*#__PURE__*/_jsx(\"input\",{className:\"how-exchange__block-input\",type:\"text\",placeholder:\"Any coin address\",value:address,onChange:e=>setAddress(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRequest(),className:getButtonStyles(buttonStatus),children:getButtonText(buttonStatus,isPending)})]});};export default WalletBonus;","map":{"version":3,"names":["wait","useState","WalletBonusEnum","chechWalletBonus","getButtonStyles","getButtonText","jsx","_jsx","jsxs","_jsxs","WalletBonus","address","setAddress","isPending","setIsPending","buttonStatus","setButtonStatus","Default","handleRequest","isValidAddress","Denied","Confirmed","className","children","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/Users/1/Videos/exchangePro-main/client/src/screens/home/components/howExchange/components/walletBonus/index.tsx"],"sourcesContent":["import { wait } from \"@testing-library/user-event/dist/utils\"\nimport { useEffect, useState } from \"react\"\nimport { WalletBonusEnum } from \"./enum\"\nimport { chechWalletBonus, getButtonStyles, getButtonText } from \"./helpers\"\n\nconst WalletBonus = () => {\n    const [address, setAddress] = useState('')\n    const [isPending, setIsPending] = useState(false)\n    const [buttonStatus, setButtonStatus] = useState(WalletBonusEnum.Default)\n\n    const handleRequest = async () => {\n        setIsPending(true)\n\n        const isValidAddress = chechWalletBonus(address)\n\n        await wait(1500)\n\n        if (!isValidAddress) {\n            setButtonStatus(WalletBonusEnum.Denied)\n        } else {\n            setButtonStatus(WalletBonusEnum.Confirmed)\n        }\n        \n        setIsPending(false)\n        await wait(1500)\n        setButtonStatus(WalletBonusEnum.Default)\n    }\n\n    return (\n        <div className=\"how-exchange__block\">\n            <div className=\"how-exchange__block-step\">\n                Step #1\n            </div>\n            <h4 className=\"how-exchange__block-title\">\n                Check your wallet for 15% bonus!\n            </h4>\n            <div className=\"how-exchange__block-text\">\n                Enter your address to receive bonus!\n            </div>\n            <input\n                className=\"how-exchange__block-input\"\n                type=\"text\"\n                placeholder=\"Any coin address\"\n                value={address}\n                onChange={e => setAddress(e.target.value)}\n            />\n            <button onClick={() => handleRequest()} className={getButtonStyles(buttonStatus)}>\n                {\n                    getButtonText(buttonStatus, isPending)\n                }\n            </button>\n        </div>\n    )\n}\n\nexport default WalletBonus"],"mappings":"AAAA,OAASA,IAAI,KAAQ,wCAAwC,CAC7D,OAAoBC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,eAAe,KAAQ,QAAQ,CACxC,OAASC,gBAAgB,CAAEC,eAAe,CAAEC,aAAa,KAAQ,WAAW,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5E,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACY,SAAS,CAAEC,YAAY,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACc,YAAY,CAAEC,eAAe,CAAC,CAAGf,QAAQ,CAACC,eAAe,CAACe,OAAO,CAAC,CAEzE,KAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAC9BJ,YAAY,CAAC,IAAI,CAAC,CAElB,KAAM,CAAAK,cAAc,CAAGhB,gBAAgB,CAACQ,OAAO,CAAC,CAEhD,KAAM,CAAAX,IAAI,CAAC,IAAI,CAAC,CAEhB,GAAI,CAACmB,cAAc,CAAE,CACjBH,eAAe,CAACd,eAAe,CAACkB,MAAM,CAAC,CAC3C,CAAC,IAAM,CACHJ,eAAe,CAACd,eAAe,CAACmB,SAAS,CAAC,CAC9C,CAEAP,YAAY,CAAC,KAAK,CAAC,CACnB,KAAM,CAAAd,IAAI,CAAC,IAAI,CAAC,CAChBgB,eAAe,CAACd,eAAe,CAACe,OAAO,CAAC,CAC5C,CAAC,CAED,mBACIR,KAAA,QAAKa,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAChChB,IAAA,QAAKe,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CAAC,SAE1C,CAAK,CAAC,cACNhB,IAAA,OAAIe,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAC,kCAE1C,CAAI,CAAC,cACLhB,IAAA,QAAKe,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CAAC,sCAE1C,CAAK,CAAC,cACNhB,IAAA,UACIe,SAAS,CAAC,2BAA2B,CACrCE,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,kBAAkB,CAC9BC,KAAK,CAAEf,OAAQ,CACfgB,QAAQ,CAAEC,CAAC,EAAIhB,UAAU,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7C,CAAC,cACFnB,IAAA,WAAQuB,OAAO,CAAEA,CAAA,GAAMZ,aAAa,CAAC,CAAE,CAACI,SAAS,CAAElB,eAAe,CAACW,YAAY,CAAE,CAAAQ,QAAA,CAEzElB,aAAa,CAACU,YAAY,CAAEF,SAAS,CAAC,CAEtC,CAAC,EACR,CAAC,CAEd,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}