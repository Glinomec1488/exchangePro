{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { serveUrl } from \"../../../../../../../config\";\nimport { useAppSelector } from \"../../../../../../../store/hooks\";\nconst getFixedAmount = amount => {\n  if (amount.toFixed(6) === \"0,000000\" || amount.toFixed(6) === \"0.000000\") return \"0\";\n  return amount.toFixed(7);\n};\nconst ranges = {\n  BTC: {\n    min: 0.0001,\n    max: 10\n  },\n  ETH: {\n    min: 0.02,\n    max: 100\n  },\n  BNB: {\n    min: 0.08,\n    max: 100\n  },\n  BCH: {\n    min: 0.15,\n    max: 100\n  },\n  ZEC: {\n    min: 1,\n    max: 1488\n  },\n  FTM: {\n    min: 74,\n    max: 1009\n  },\n  SOL: {\n    min: 0.3,\n    max: 1001\n  },\n  LTC: {\n    min: 0.77,\n    max: 1021\n  },\n  TRX: {\n    min: 293,\n    max: 100053\n  },\n  ZRX: {\n    min: 157,\n    max: 100063\n  },\n  XRP: {\n    min: 92,\n    max: 10000\n  },\n  USDT: {\n    min: 44,\n    max: 106051\n  },\n  USDTTRC: {\n    min: 41,\n    max: 905030\n  },\n  ADA: {\n    min: 141,\n    max: 100000\n  },\n  XTZ: {\n    min: 72,\n    max: 100067\n  },\n  XMR: {\n    min: 0.3,\n    max: 1055\n  },\n  DASH: {\n    min: 2.1,\n    max: 10083\n  },\n  DOGE: {\n    min: 449,\n    max: 1220000\n  },\n  DOT: {\n    min: 11,\n    max: 100554\n  }\n};\nconst filterShortName = input => {\n  return input.replace(/\\(.*?\\)/g, \"\").trim();\n};\nconst {\n  fromCurrency,\n  toCurrency\n} = useAppSelector(state => state.exchange);\nconst getExchangeRate = async (toCurrencyAmount, fromCurrencyAmount, isChangeReceiveAmount) => {\n  if (!isChangeInput || !toCurrency.shortName || !fromCurrency.shortName) return;\n  const isChange = isChangeReceiveAmount ? \"True\" : \"false\";\n  const newForm = await fetch(`${serveUrl}/calculator/${noNetShrtTo}/${noNetShrtFrom}/${fromCurrencyAmount || \"0.01\"}/${toCurrencyAmount || \"0.01\"}/${isChange}`, {\n    method: \"POST\"\n  }).then(res => res.json());\n  if (isChangeReceiveAmount) {\n    setFromCurrencyAmount(getFixedAmount(newForm.amount));\n  } else {\n    setToCurrencyAmount(getFixedAmount(newForm.amount));\n  }\n  setIsChangeInput(false);\n};\nconst useExchangeRate = () => {\n  _s();\n  const [fromCurrencyAmount, setFromCurrencyAmount] = useState(\"0.01\");\n  const [toCurrencyAmount, setToCurrencyAmount] = useState(\"\");\n  const [isChangeInput, setIsChangeInput] = useState(true);\n  const [isChangeToCurrency, setIsChangeToCurrency] = useState(false);\n  const [isChangeFromCurrency, setIsChangeFromCurrency] = useState(false);\n  const noNetShrtTo = filterShortName(fromCurrency.shortName);\n  const noNetShrtFrom = filterShortName(toCurrency.shortName);\n  const [minAmount, setMinAmount] = useState(1);\n  const [maxAmount, setMaxAmount] = useState(1);\n  const getFromCurrencyRange = currency => {\n    return ranges[currency] || {\n      min: \"0\",\n      max: \"0\"\n    }; // Default range if currency is not found\n  };\n\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, false);\n  }, [fromCurrencyAmount, isChangeFromCurrency]);\n\n  /*useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, true);\n  }, [toCurrencyAmount, isChangeToCurrency]);*/\n\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeFromCurrency(prev => !prev);\n  }, [fromCurrency]);\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeToCurrency(prev => !prev);\n  }, [toCurrency]);\n  useEffect(() => {\n    if (noNetShrtTo) {\n      const range = getFromCurrencyRange(noNetShrtTo);\n      setMinAmount(range.min);\n      setMaxAmount(range.max);\n    }\n  }, [fromCurrency]);\n  const config = {\n    fromCurrenycRange: {\n      from: minAmount,\n      to: maxAmount\n    },\n    toCurrenycRange: {\n      from: 0,\n      to: 0\n    }\n  };\n  const changeFromAmount = amount => {\n    if (Number(amount) <= config.fromCurrenycRange.to && Number(amount) >= config.fromCurrenycRange.from) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.fromCurrenycRange.from}`);\n    }\n  };\n  const changeToAmount = amount => {\n    if (Number(amount) <= config.toCurrenycRange.to && Number(amount) >= config.toCurrenycRange.from) {\n      setToCurrencyAmount(amount);\n    } else {\n      setToCurrencyAmount(`${config.toCurrenycRange.from}`);\n    }\n  };\n  return {\n    exchangeRate: config,\n    fromCurrencyAmount,\n    toCurrencyAmount,\n    setFromCurrencyAmount: changeFromAmount,\n    setToCurrencyAmount: changeToAmount,\n    setIsChangeInput\n  };\n};\n_s(useExchangeRate, \"t+SIeImtgxWAGJNBLsf1EyVGbKw=\");\nexport default useExchangeRate;","map":{"version":3,"names":["useEffect","useState","serveUrl","useAppSelector","getFixedAmount","amount","toFixed","ranges","BTC","min","max","ETH","BNB","BCH","ZEC","FTM","SOL","LTC","TRX","ZRX","XRP","USDT","USDTTRC","ADA","XTZ","XMR","DASH","DOGE","DOT","filterShortName","input","replace","trim","fromCurrency","toCurrency","state","exchange","getExchangeRate","toCurrencyAmount","fromCurrencyAmount","isChangeReceiveAmount","isChangeInput","shortName","isChange","newForm","fetch","noNetShrtTo","noNetShrtFrom","method","then","res","json","setFromCurrencyAmount","setToCurrencyAmount","setIsChangeInput","useExchangeRate","isChangeToCurrency","setIsChangeToCurrency","isChangeFromCurrency","setIsChangeFromCurrency","minAmount","setMinAmount","maxAmount","setMaxAmount","getFromCurrencyRange","currency","prev","range","config","fromCurrenycRange","from","to","toCurrenycRange","changeFromAmount","Number","changeToAmount","exchangeRate"],"sources":["C:/Users/1/Downloads/naebalovo.com/client/src/screens/home/components/exchange/components/form/hooks/useExchangeRate.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { serveUrl } from \"../../../../../../../config\";\nimport { useAppSelector } from \"../../../../../../../store/hooks\";\n\nconst getFixedAmount = (amount: number) => {\n  if (amount.toFixed(6) === \"0,000000\" || amount.toFixed(6) === \"0.000000\")\n    return \"0\";\n  return amount.toFixed(7);\n};\nconst ranges: Record<string, { min: number; max: number }> = {\n  BTC: { min: 0.0001, max: 10 },\n  ETH: { min: 0.02, max: 100 },\n  BNB: { min: 0.08, max: 100 },\n  BCH: { min: 0.15, max: 100 },\n  ZEC: { min: 1, max: 1488 },\n  FTM: { min: 74, max: 1009 },\n  SOL: { min: 0.3, max: 1001 },\n  LTC: { min: 0.77, max: 1021 },\n  TRX: { min: 293, max: 100053 },\n  ZRX: { min: 157, max: 100063 },\n  XRP: { min: 92, max: 10000 },\n  USDT: { min: 44, max: 106051 },\n  USDTTRC: { min: 41, max: 905030 },\n  ADA: { min: 141, max: 100000 },\n  XTZ: { min: 72, max: 100067 },\n  XMR: { min: 0.3, max: 1055 },\n  DASH: { min: 2.1, max: 10083 },\n  DOGE: { min: 449, max: 1220000 },\n  DOT: { min: 11, max: 100554 },\n};\n\nconst filterShortName = (input: string) => {\n  return input.replace(/\\(.*?\\)/g, \"\").trim();\n};\n\nconst { fromCurrency, toCurrency } = useAppSelector((state) => state.exchange);\n\nconst getExchangeRate = async (\n  toCurrencyAmount: string,\n  fromCurrencyAmount: string,\n  isChangeReceiveAmount: boolean\n) => {\n  if (!isChangeInput || !toCurrency.shortName || !fromCurrency.shortName)\n    return;\n\n  const isChange = isChangeReceiveAmount ? \"True\" : \"false\";\n  const newForm = await fetch(\n    `${serveUrl}/calculator/${noNetShrtTo}/${noNetShrtFrom}/${\n      fromCurrencyAmount || \"0.01\"\n    }/${toCurrencyAmount || \"0.01\"}/${isChange}`,\n    {\n      method: \"POST\",\n    }\n  ).then((res) => res.json());\n\n  if (isChangeReceiveAmount) {\n    setFromCurrencyAmount(getFixedAmount(newForm.amount));\n  } else {\n    setToCurrencyAmount(getFixedAmount(newForm.amount));\n  }\n  setIsChangeInput(false);\n};\n\nconst useExchangeRate = () => {\n  const [fromCurrencyAmount, setFromCurrencyAmount] = useState(\"0.01\");\n  const [toCurrencyAmount, setToCurrencyAmount] = useState(\"\");\n  const [isChangeInput, setIsChangeInput] = useState(true);\n  const [isChangeToCurrency, setIsChangeToCurrency] = useState(false);\n  const [isChangeFromCurrency, setIsChangeFromCurrency] = useState(false);\n  const noNetShrtTo = filterShortName(fromCurrency.shortName);\n  const noNetShrtFrom = filterShortName(toCurrency.shortName);\n  const [minAmount, setMinAmount] = useState(1);\n  const [maxAmount, setMaxAmount] = useState(1);\n\n  const getFromCurrencyRange = (currency: string) => {\n    return ranges[currency] || { min: \"0\", max: \"0\" }; // Default range if currency is not found\n  };\n\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, false);\n  }, [fromCurrencyAmount, isChangeFromCurrency]);\n\n  /*useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, true);\n  }, [toCurrencyAmount, isChangeToCurrency]);*/\n\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeFromCurrency((prev) => !prev);\n  }, [fromCurrency]);\n\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeToCurrency((prev) => !prev);\n  }, [toCurrency]);\n\n  useEffect(() => {\n    if (noNetShrtTo) {\n      const range = getFromCurrencyRange(noNetShrtTo);\n      setMinAmount(range.min);\n      setMaxAmount(range.max);\n    }\n  }, [fromCurrency]);\n\n  const config = {\n    fromCurrenycRange: {\n      from: minAmount,\n      to: maxAmount,\n    },\n    toCurrenycRange: {\n      from: 0,\n      to: 0,\n    },\n  };\n\n  const changeFromAmount = (amount: string) => {\n    if (\n      Number(amount) <= config.fromCurrenycRange.to &&\n      Number(amount) >= config.fromCurrenycRange.from\n    ) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.fromCurrenycRange.from}`);\n    }\n  };\n\n  const changeToAmount = (amount: string) => {\n    if (\n      Number(amount) <= config.toCurrenycRange.to &&\n      Number(amount) >= config.toCurrenycRange.from\n    ) {\n      setToCurrencyAmount(amount);\n    } else {\n      setToCurrencyAmount(`${config.toCurrenycRange.from}`);\n    }\n  };\n\n  return {\n    exchangeRate: config,\n    fromCurrencyAmount,\n    toCurrencyAmount,\n    setFromCurrencyAmount: changeFromAmount,\n    setToCurrencyAmount: changeToAmount,\n    setIsChangeInput,\n  };\n};\n\nexport default useExchangeRate;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,cAAc,QAAQ,kCAAkC;AAEjE,MAAMC,cAAc,GAAIC,MAAc,IAAK;EACzC,IAAIA,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,KAAK,UAAU,IAAID,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,KAAK,UAAU,EACtE,OAAO,GAAG;EACZ,OAAOD,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;AAC1B,CAAC;AACD,MAAMC,MAAoD,GAAG;EAC3DC,GAAG,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAG,CAAC;EAC7BC,GAAG,EAAE;IAAEF,GAAG,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAI,CAAC;EAC5BE,GAAG,EAAE;IAAEH,GAAG,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAI,CAAC;EAC5BG,GAAG,EAAE;IAAEJ,GAAG,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAI,CAAC;EAC5BI,GAAG,EAAE;IAAEL,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAK,CAAC;EAC1BK,GAAG,EAAE;IAAEN,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAK,CAAC;EAC3BM,GAAG,EAAE;IAAEP,GAAG,EAAE,GAAG;IAAEC,GAAG,EAAE;EAAK,CAAC;EAC5BO,GAAG,EAAE;IAAER,GAAG,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAK,CAAC;EAC7BQ,GAAG,EAAE;IAAET,GAAG,EAAE,GAAG;IAAEC,GAAG,EAAE;EAAO,CAAC;EAC9BS,GAAG,EAAE;IAAEV,GAAG,EAAE,GAAG;IAAEC,GAAG,EAAE;EAAO,CAAC;EAC9BU,GAAG,EAAE;IAAEX,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAM,CAAC;EAC5BW,IAAI,EAAE;IAAEZ,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAO,CAAC;EAC9BY,OAAO,EAAE;IAAEb,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAO,CAAC;EACjCa,GAAG,EAAE;IAAEd,GAAG,EAAE,GAAG;IAAEC,GAAG,EAAE;EAAO,CAAC;EAC9Bc,GAAG,EAAE;IAAEf,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAO,CAAC;EAC7Be,GAAG,EAAE;IAAEhB,GAAG,EAAE,GAAG;IAAEC,GAAG,EAAE;EAAK,CAAC;EAC5BgB,IAAI,EAAE;IAAEjB,GAAG,EAAE,GAAG;IAAEC,GAAG,EAAE;EAAM,CAAC;EAC9BiB,IAAI,EAAE;IAAElB,GAAG,EAAE,GAAG;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAChCkB,GAAG,EAAE;IAAEnB,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAO;AAC9B,CAAC;AAED,MAAMmB,eAAe,GAAIC,KAAa,IAAK;EACzC,OAAOA,KAAK,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAACC,IAAI,EAAE;AAC7C,CAAC;AAED,MAAM;EAAEC,YAAY;EAAEC;AAAW,CAAC,GAAG/B,cAAc,CAAEgC,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;AAE9E,MAAMC,eAAe,GAAG,OACtBC,gBAAwB,EACxBC,kBAA0B,EAC1BC,qBAA8B,KAC3B;EACH,IAAI,CAACC,aAAa,IAAI,CAACP,UAAU,CAACQ,SAAS,IAAI,CAACT,YAAY,CAACS,SAAS,EACpE;EAEF,MAAMC,QAAQ,GAAGH,qBAAqB,GAAG,MAAM,GAAG,OAAO;EACzD,MAAMI,OAAO,GAAG,MAAMC,KAAK,CACxB,GAAE3C,QAAS,eAAc4C,WAAY,IAAGC,aAAc,IACrDR,kBAAkB,IAAI,MACvB,IAAGD,gBAAgB,IAAI,MAAO,IAAGK,QAAS,EAAC,EAC5C;IACEK,MAAM,EAAE;EACV,CAAC,CACF,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;EAE3B,IAAIX,qBAAqB,EAAE;IACzBY,qBAAqB,CAAChD,cAAc,CAACwC,OAAO,CAACvC,MAAM,CAAC,CAAC;EACvD,CAAC,MAAM;IACLgD,mBAAmB,CAACjD,cAAc,CAACwC,OAAO,CAACvC,MAAM,CAAC,CAAC;EACrD;EACAiD,gBAAgB,CAAC,KAAK,CAAC;AACzB,CAAC;AAED,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC5B,MAAM,CAAChB,kBAAkB,EAAEa,qBAAqB,CAAC,GAAGnD,QAAQ,CAAC,MAAM,CAAC;EACpE,MAAM,CAACqC,gBAAgB,EAAEe,mBAAmB,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACwC,aAAa,EAAEa,gBAAgB,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACuD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxD,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACyD,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM6C,WAAW,GAAGjB,eAAe,CAACI,YAAY,CAACS,SAAS,CAAC;EAC3D,MAAMK,aAAa,GAAGlB,eAAe,CAACK,UAAU,CAACQ,SAAS,CAAC;EAC3D,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAG5D,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC6D,SAAS,EAAEC,YAAY,CAAC,GAAG9D,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAM+D,oBAAoB,GAAIC,QAAgB,IAAK;IACjD,OAAO1D,MAAM,CAAC0D,QAAQ,CAAC,IAAI;MAAExD,GAAG,EAAE,GAAG;MAAEC,GAAG,EAAE;IAAI,CAAC,CAAC,CAAC;EACrD,CAAC;;EAEDV,SAAS,CAAC,MAAM;IACdqC,eAAe,CAACC,gBAAgB,EAAEC,kBAAkB,EAAE,KAAK,CAAC;EAC9D,CAAC,EAAE,CAACA,kBAAkB,EAAEmB,oBAAoB,CAAC,CAAC;;EAE9C;AACF;AACA;;EAEE1D,SAAS,CAAC,MAAM;IACdsD,gBAAgB,CAAC,IAAI,CAAC;IACtBK,uBAAuB,CAAEO,IAAI,IAAK,CAACA,IAAI,CAAC;EAC1C,CAAC,EAAE,CAACjC,YAAY,CAAC,CAAC;EAElBjC,SAAS,CAAC,MAAM;IACdsD,gBAAgB,CAAC,IAAI,CAAC;IACtBG,qBAAqB,CAAES,IAAI,IAAK,CAACA,IAAI,CAAC;EACxC,CAAC,EAAE,CAAChC,UAAU,CAAC,CAAC;EAEhBlC,SAAS,CAAC,MAAM;IACd,IAAI8C,WAAW,EAAE;MACf,MAAMqB,KAAK,GAAGH,oBAAoB,CAAClB,WAAW,CAAC;MAC/Ce,YAAY,CAACM,KAAK,CAAC1D,GAAG,CAAC;MACvBsD,YAAY,CAACI,KAAK,CAACzD,GAAG,CAAC;IACzB;EACF,CAAC,EAAE,CAACuB,YAAY,CAAC,CAAC;EAElB,MAAMmC,MAAM,GAAG;IACbC,iBAAiB,EAAE;MACjBC,IAAI,EAAEV,SAAS;MACfW,EAAE,EAAET;IACN,CAAC;IACDU,eAAe,EAAE;MACfF,IAAI,EAAE,CAAC;MACPC,EAAE,EAAE;IACN;EACF,CAAC;EAED,MAAME,gBAAgB,GAAIpE,MAAc,IAAK;IAC3C,IACEqE,MAAM,CAACrE,MAAM,CAAC,IAAI+D,MAAM,CAACC,iBAAiB,CAACE,EAAE,IAC7CG,MAAM,CAACrE,MAAM,CAAC,IAAI+D,MAAM,CAACC,iBAAiB,CAACC,IAAI,EAC/C;MACAlB,qBAAqB,CAAC/C,MAAM,CAAC;IAC/B,CAAC,MAAM;MACL+C,qBAAqB,CAAE,GAAEgB,MAAM,CAACC,iBAAiB,CAACC,IAAK,EAAC,CAAC;IAC3D;EACF,CAAC;EAED,MAAMK,cAAc,GAAItE,MAAc,IAAK;IACzC,IACEqE,MAAM,CAACrE,MAAM,CAAC,IAAI+D,MAAM,CAACI,eAAe,CAACD,EAAE,IAC3CG,MAAM,CAACrE,MAAM,CAAC,IAAI+D,MAAM,CAACI,eAAe,CAACF,IAAI,EAC7C;MACAjB,mBAAmB,CAAChD,MAAM,CAAC;IAC7B,CAAC,MAAM;MACLgD,mBAAmB,CAAE,GAAEe,MAAM,CAACI,eAAe,CAACF,IAAK,EAAC,CAAC;IACvD;EACF,CAAC;EAED,OAAO;IACLM,YAAY,EAAER,MAAM;IACpB7B,kBAAkB;IAClBD,gBAAgB;IAChBc,qBAAqB,EAAEqB,gBAAgB;IACvCpB,mBAAmB,EAAEsB,cAAc;IACnCrB;EACF,CAAC;AACH,CAAC;AAAC,GAlFIC,eAAe;AAoFrB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}