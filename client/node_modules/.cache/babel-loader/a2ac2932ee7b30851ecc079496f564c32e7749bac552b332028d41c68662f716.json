{"ast":null,"code":"import{useState,useEffect}from\"react\";import{serveUrl}from\"../../config\";const useChat=()=>{const[messages,setMessages]=useState([/*{\n      id: 1,\n      text: \"Hello my friend!\",\n      createdAt: \"2021-07-21 12:09:12\",\n      user: {\n        id: 1,\n      },\n    },\n    {\n      id: 2,\n      text: \"Hello!\",\n      createdAt: \"2021-07-21 14:09:12\",\n      user: {\n        id: 2,\n      },\n    },*/]);const getHistoy=async()=>{const userId=localStorage.getItem(\"userId\");const history=await fetch(`${serveUrl}/msgHistory/${userId}`).then(res=>res.json());if(history.length>0){setMessages(history.map(elem=>({id:elem.id,text:elem.text,createdAt:elem.timestamp,user:{id:elem.user===\"true\"?2:1}})));}};const sendMessage=async message=>{const messageTextEncoded=encodeURIComponent(message.text);const userId=localStorage.getItem(\"userId\");const timestamp=new Date().getTime();await fetch(`${serveUrl}/msgSave/${messageTextEncoded}/${userId}/${timestamp}/true`,{method:\"POST\"});getHistoy();};useEffect(()=>{const timer=setInterval(()=>{getHistoy();},10000);return()=>clearInterval(timer);});return{messages,sendMessage};};export default useChat;","map":{"version":3,"names":["useState","useEffect","serveUrl","useChat","messages","setMessages","getHistoy","userId","localStorage","getItem","history","fetch","then","res","json","length","map","elem","id","text","createdAt","timestamp","user","sendMessage","message","messageTextEncoded","encodeURIComponent","Date","getTime","method","timer","setInterval","clearInterval"],"sources":["C:/Users/1/Videos/exchangePro-main/client/src/components/chat/useChat.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { Message } from \"react-simple-chat\";\nimport { serveUrl } from \"../../config\";\n\nconst useChat = () => {\n  const [messages, setMessages] = useState<Message[]>([\n    /*{\n      id: 1,\n      text: \"Hello my friend!\",\n      createdAt: \"2021-07-21 12:09:12\",\n      user: {\n        id: 1,\n      },\n    },\n    {\n      id: 2,\n      text: \"Hello!\",\n      createdAt: \"2021-07-21 14:09:12\",\n      user: {\n        id: 2,\n      },\n    },*/\n  ]);\n\n  const getHistoy = async () => {\n    const userId = localStorage.getItem(\"userId\");\n\n    const history = await fetch(`${serveUrl}/msgHistory/${userId}`).then(\n      (res) => res.json()\n    );\n\n    if (history.length > 0) {\n      setMessages(\n        history.map((elem: any) => ({\n          id: elem.id,\n          text: elem.text,\n          createdAt: elem.timestamp,\n          user: {\n            id: elem.user === \"true\" ? 2 : 1,\n          },\n        }))\n      );\n    }\n  };\n\n  const sendMessage = async (message: Message) => {\n    const messageTextEncoded = encodeURIComponent(message.text);\n    const userId = localStorage.getItem(\"userId\");\n    const timestamp = new Date().getTime();\n    await fetch(\n      `${serveUrl}/msgSave/${messageTextEncoded}/${userId}/${timestamp}/true`,\n      {\n        method: \"POST\",\n      }\n    );\n\n    getHistoy();\n  };\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      getHistoy();\n    }, 10000);\n\n    return () => clearInterval(timer);\n  });\n\n  return {\n    messages,\n    sendMessage,\n  };\n};\n\nexport default useChat;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAqB,OAAO,CAExD,OAASC,QAAQ,KAAQ,cAAc,CAEvC,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGL,QAAQ,CAAY,CAClD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAfI,CAgBD,CAAC,CAEF,KAAM,CAAAM,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,KAAM,CAAAC,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAE7C,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGT,QAAQ,eAAeK,MAAM,EAAE,CAAC,CAACK,IAAI,CACjEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CACpB,CAAC,CAED,GAAIJ,OAAO,CAACK,MAAM,CAAG,CAAC,CAAE,CACtBV,WAAW,CACTK,OAAO,CAACM,GAAG,CAAEC,IAAS,GAAM,CAC1BC,EAAE,CAAED,IAAI,CAACC,EAAE,CACXC,IAAI,CAAEF,IAAI,CAACE,IAAI,CACfC,SAAS,CAAEH,IAAI,CAACI,SAAS,CACzBC,IAAI,CAAE,CACJJ,EAAE,CAAED,IAAI,CAACK,IAAI,GAAK,MAAM,CAAG,CAAC,CAAG,CACjC,CACF,CAAC,CAAC,CACJ,CAAC,CACH,CACF,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,KAAO,CAAAC,OAAgB,EAAK,CAC9C,KAAM,CAAAC,kBAAkB,CAAGC,kBAAkB,CAACF,OAAO,CAACL,IAAI,CAAC,CAC3D,KAAM,CAAAZ,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAC7C,KAAM,CAAAY,SAAS,CAAG,GAAI,CAAAM,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CACtC,KAAM,CAAAjB,KAAK,CACT,GAAGT,QAAQ,YAAYuB,kBAAkB,IAAIlB,MAAM,IAAIc,SAAS,OAAO,CACvE,CACEQ,MAAM,CAAE,MACV,CACF,CAAC,CAEDvB,SAAS,CAAC,CAAC,CACb,CAAC,CAEDL,SAAS,CAAC,IAAM,CACd,KAAM,CAAA6B,KAAK,CAAGC,WAAW,CAAC,IAAM,CAC9BzB,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,KAAK,CAAC,CAET,MAAO,IAAM0B,aAAa,CAACF,KAAK,CAAC,CACnC,CAAC,CAAC,CAEF,MAAO,CACL1B,QAAQ,CACRmB,WACF,CAAC,CACH,CAAC,CAED,cAAe,CAAApB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}