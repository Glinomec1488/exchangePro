{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./styles.css\";\nimport { useAppSelector } from \"../../../../../../store/hooks\";\nimport useCurrency from \"../../hooks/useCurrency\";\nconst CurrencyDropDown = ({\n  isTo\n}) => {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const {\n    // currencies,\n    setFromCurrency,\n    setToCurrency\n  } = useCurrency();\n  const toCurrency = useAppSelector(state => state.exchange.toCurrency);\n  const fromCurrency = useAppSelector(state => state.exchange.fromCurrency);\n  const currencies = useAppSelector(state => state.exchange.currencies);\n  const handleSelectCurrency = (shortName, fullName) => {\n    if (isTo && fromCurrency.fullName !== fullName) {\n      setToCurrency(shortName, fullName);\n    }\n    if (!isTo && toCurrency.fullName !== fullName) {\n      setFromCurrency(shortName, fullName);\n    }\n  };\n  return null;\n};\n_s(CurrencyDropDown, \"lQ9zau8bvpsyG9EpmbBqrb1S+/c=\", false, function () {\n  return [useCurrency, useAppSelector, useAppSelector, useAppSelector];\n});\n_c = CurrencyDropDown;\nexport default CurrencyDropDown;\nvar _c;\n$RefreshReg$(_c, \"CurrencyDropDown\");","map":{"version":3,"names":["useState","useAppSelector","useCurrency","CurrencyDropDown","isTo","_s","isActive","setIsActive","setFromCurrency","setToCurrency","toCurrency","state","exchange","fromCurrency","currencies","handleSelectCurrency","shortName","fullName","_c","$RefreshReg$"],"sources":["C:/Users/1/Videos/exchangePro-main/client/src/screens/home/components/exchange/components/currencyDropdown/index.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\nimport arrow from \"../../../../../../assets/drop_arrow.svg\";\nimport { getActiveCurrencyStyle } from \"../currenciesList/helpers\";\nimport { useAppSelector } from \"../../../../../../store/hooks\";\nimport { getEnv } from \"../../../../../../utils\";\nimport useCurrency from \"../../hooks/useCurrency\";\n\ninterface IProps {\n  isTo: boolean;\n}\n\nconst CurrencyDropDown = ({ isTo }: IProps) => {\n  const [isActive, setIsActive] = useState(false);\n\n  const {\n    // currencies,\n    setFromCurrency,\n    setToCurrency,\n  } = useCurrency();\n\n  const toCurrency = useAppSelector((state) => state.exchange.toCurrency);\n  const fromCurrency = useAppSelector((state) => state.exchange.fromCurrency);\n  const currencies = useAppSelector((state) => state.exchange.currencies);\n\n  const handleSelectCurrency = (shortName: string, fullName: string) => {\n    if (isTo && fromCurrency.fullName !== fullName) {\n      setToCurrency(shortName, fullName);\n    }\n    if (!isTo && toCurrency.fullName !== fullName) {\n      setFromCurrency(shortName, fullName);\n    }\n  };\n\n  return null;\n};\n\nexport default CurrencyDropDown;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,cAAc;AAGrB,SAASC,cAAc,QAAQ,+BAA+B;AAE9D,OAAOC,WAAW,MAAM,yBAAyB;AAMjD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAM;IACJ;IACAQ,eAAe;IACfC;EACF,CAAC,GAAGP,WAAW,CAAC,CAAC;EAEjB,MAAMQ,UAAU,GAAGT,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACF,UAAU,CAAC;EACvE,MAAMG,YAAY,GAAGZ,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACC,YAAY,CAAC;EAC3E,MAAMC,UAAU,GAAGb,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACE,UAAU,CAAC;EAEvE,MAAMC,oBAAoB,GAAGA,CAACC,SAAiB,EAAEC,QAAgB,KAAK;IACpE,IAAIb,IAAI,IAAIS,YAAY,CAACI,QAAQ,KAAKA,QAAQ,EAAE;MAC9CR,aAAa,CAACO,SAAS,EAAEC,QAAQ,CAAC;IACpC;IACA,IAAI,CAACb,IAAI,IAAIM,UAAU,CAACO,QAAQ,KAAKA,QAAQ,EAAE;MAC7CT,eAAe,CAACQ,SAAS,EAAEC,QAAQ,CAAC;IACtC;EACF,CAAC;EAED,OAAO,IAAI;AACb,CAAC;AAACZ,EAAA,CAvBIF,gBAAgB;EAAA,QAOhBD,WAAW,EAEID,cAAc,EACZA,cAAc,EAChBA,cAAc;AAAA;AAAAiB,EAAA,GAX7Bf,gBAAgB;AAyBtB,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}