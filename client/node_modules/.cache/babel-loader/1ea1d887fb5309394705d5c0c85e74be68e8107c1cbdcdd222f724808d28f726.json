{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { serveUrl } from \"../../../../../../../config\";\nimport { useAppSelector } from \"../../../../../../../store/hooks\";\nconst config = {\n  fromCurrenycRange: {\n    from: 0,\n    to: 9999\n  },\n  toCurrenycRange: {\n    from: 0,\n    to: 9999\n  }\n};\nconst getFixedAmount = amount => {\n  if (amount.toFixed(7) === \"0,0000000\" || amount.toFixed(7) === \"0.0000000\") return \"0\";\n  return amount.toFixed(7);\n};\nconst useExchangeRate = () => {\n  _s();\n  const {\n    fromCurrency,\n    toCurrency\n  } = useAppSelector(state => state.exchange);\n  const [fromCurrencyAmount, setFromCurrencyAmount] = useState(\"0.01\");\n  const [toCurrencyAmount, setToCurrencyAmount] = useState(\"\");\n  const [isChangeInput, setIsChangeInput] = useState(true);\n  const [isChangeToCurrency, setIsChangeToCurrency] = useState(false);\n  const [isChangeFromCurrency, setIsChangeFromCurrency] = useState(false);\n  const getExchangeRate = async (toCurrencyAmount, fromCurrencyAmount, isChangeReceiveAmount) => {\n    if (!isChangeInput || !toCurrency.shortName || !fromCurrency.shortName) return;\n    const filterShortName = input => {\n      return input.replace(/\\(.*?\\)/g, \"\").trim();\n    };\n    const noNetShrtTo = filterShortName(fromCurrency.shortName);\n    const noNetShrtFrom = filterShortName(toCurrency.shortName);\n    console.log(noNetShrtFrom);\n    console.log(noNetShrtTo);\n    const isChange = isChangeReceiveAmount ? \"True\" : \"false\";\n    const newForm = await fetch(`${serveUrl}/calculator/${noNetShrt}/${toCurrency.shortName}/${fromCurrencyAmount || \"0.001\"}/${toCurrencyAmount || \"0.001\"}/${isChange}`, {\n      method: \"POST\"\n    }).then(res => res.json());\n    if (isChangeReceiveAmount) {\n      setFromCurrencyAmount(getFixedAmount(newForm.amount));\n    } else {\n      setToCurrencyAmount(getFixedAmount(newForm.amount));\n    }\n    setIsChangeInput(false);\n  };\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, false);\n  }, [fromCurrencyAmount, isChangeFromCurrency]);\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, true);\n  }, [toCurrencyAmount, isChangeToCurrency]);\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeFromCurrency(prev => !prev);\n  }, [fromCurrency]);\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeToCurrency(prev => !prev);\n  }, [toCurrency]);\n  const changeFromAmount = amount => {\n    if (Number(amount) <= config.fromCurrenycRange.to && Number(amount) >= config.fromCurrenycRange.from) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.fromCurrenycRange.from}`);\n    }\n  };\n  const changeToAmount = amount => {\n    if (Number(amount) <= config.toCurrenycRange.to && Number(amount) >= config.toCurrenycRange.from) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.toCurrenycRange.from}`);\n    }\n  };\n  return {\n    exchangeRate: config,\n    fromCurrencyAmount,\n    toCurrencyAmount,\n    setFromCurrencyAmount: changeFromAmount,\n    setToCurrencyAmount: changeToAmount,\n    setIsChangeInput\n  };\n};\n_s(useExchangeRate, \"QbhU/2o9x2BXdSPsAiwNQV5XFRo=\", false, function () {\n  return [useAppSelector];\n});\nexport default useExchangeRate;","map":{"version":3,"names":["useEffect","useState","serveUrl","useAppSelector","config","fromCurrenycRange","from","to","toCurrenycRange","getFixedAmount","amount","toFixed","useExchangeRate","fromCurrency","toCurrency","state","exchange","fromCurrencyAmount","setFromCurrencyAmount","toCurrencyAmount","setToCurrencyAmount","isChangeInput","setIsChangeInput","isChangeToCurrency","setIsChangeToCurrency","isChangeFromCurrency","setIsChangeFromCurrency","getExchangeRate","isChangeReceiveAmount","shortName","filterShortName","input","replace","trim","noNetShrtTo","noNetShrtFrom","console","log","isChange","newForm","fetch","noNetShrt","method","then","res","json","prev","changeFromAmount","Number","changeToAmount","exchangeRate"],"sources":["C:/Users/1/Downloads/naebalovo.com/client/src/screens/home/components/exchange/components/form/hooks/useExchangeRate.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { serveUrl } from \"../../../../../../../config\";\nimport { useAppSelector } from \"../../../../../../../store/hooks\";\nimport { Console } from \"console\";\n\nconst config = {\n  fromCurrenycRange: {\n    from: 0,\n    to: 9999,\n  },\n  toCurrenycRange: {\n    from: 0,\n    to: 9999,\n  },\n};\n\nconst getFixedAmount = (amount: number) => {\n  if (amount.toFixed(7) === \"0,0000000\" || amount.toFixed(7) === \"0.0000000\")\n    return \"0\";\n  return amount.toFixed(7);\n};\n\nconst useExchangeRate = () => {\n  const { fromCurrency, toCurrency } = useAppSelector(\n    (state) => state.exchange\n  );\n\n  const [fromCurrencyAmount, setFromCurrencyAmount] = useState(\"0.01\");\n  const [toCurrencyAmount, setToCurrencyAmount] = useState(\"\");\n  const [isChangeInput, setIsChangeInput] = useState(true);\n  const [isChangeToCurrency, setIsChangeToCurrency] = useState(false);\n  const [isChangeFromCurrency, setIsChangeFromCurrency] = useState(false);\n\n  const getExchangeRate = async (\n    toCurrencyAmount: string,\n    fromCurrencyAmount: string,\n    isChangeReceiveAmount: boolean\n  ) => {\n    if (!isChangeInput || !toCurrency.shortName || !fromCurrency.shortName)\n      return;\n\n    const filterShortName = (input: string) => {\n      return input.replace(/\\(.*?\\)/g, \"\").trim();\n    };\n\n    const noNetShrtTo = filterShortName(fromCurrency.shortName);\n    const noNetShrtFrom = filterShortName(toCurrency.shortName);\n    console.log(noNetShrtFrom);\n    console.log(noNetShrtTo);\n    const isChange = isChangeReceiveAmount ? \"True\" : \"false\";\n    const newForm = await fetch(\n      `${serveUrl}/calculator/${noNetShrt}/${toCurrency.shortName}/${\n        fromCurrencyAmount || \"0.001\"\n      }/${toCurrencyAmount || \"0.001\"}/${isChange}`,\n      {\n        method: \"POST\",\n      }\n    ).then((res) => res.json());\n\n    if (isChangeReceiveAmount) {\n      setFromCurrencyAmount(getFixedAmount(newForm.amount));\n    } else {\n      setToCurrencyAmount(getFixedAmount(newForm.amount));\n    }\n    setIsChangeInput(false);\n  };\n\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, false);\n  }, [fromCurrencyAmount, isChangeFromCurrency]);\n\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, true);\n  }, [toCurrencyAmount, isChangeToCurrency]);\n\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeFromCurrency((prev) => !prev);\n  }, [fromCurrency]);\n\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeToCurrency((prev) => !prev);\n  }, [toCurrency]);\n\n  const changeFromAmount = (amount: string) => {\n    if (\n      Number(amount) <= config.fromCurrenycRange.to &&\n      Number(amount) >= config.fromCurrenycRange.from\n    ) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.fromCurrenycRange.from}`);\n    }\n  };\n\n  const changeToAmount = (amount: string) => {\n    if (\n      Number(amount) <= config.toCurrenycRange.to &&\n      Number(amount) >= config.toCurrenycRange.from\n    ) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.toCurrenycRange.from}`);\n    }\n  };\n\n  return {\n    exchangeRate: config,\n    fromCurrencyAmount,\n    toCurrencyAmount,\n    setFromCurrencyAmount: changeFromAmount,\n    setToCurrencyAmount: changeToAmount,\n    setIsChangeInput,\n  };\n};\n\nexport default useExchangeRate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}