{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { serveUrl } from \"../../../../../../../config\";\nimport { useAppSelector } from \"../../../../../../../store/hooks\";\nconst getFixedAmount = amount => {\n  if (amount.toFixed(7) === \"0,0000000\" || amount.toFixed(7) === \"0.0000000\") return \"0\";\n  return amount.toFixed(7);\n};\nconst ranges = {\n  BTC: {\n    min: 0.0001,\n    max: 10\n  },\n  ETH: {\n    min: 0.01,\n    max: 100\n  },\n  USD: {\n    min: 1,\n    max: 100000\n  }\n  // Add more currency ranges as needed\n};\n\nconst useExchangeRate = () => {\n  _s();\n  const {\n    fromCurrency,\n    toCurrency\n  } = useAppSelector(state => state.exchange);\n  const [fromCurrencyAmount, setFromCurrencyAmount] = useState(\"0.01\");\n  const [toCurrencyAmount, setToCurrencyAmount] = useState(\"\");\n  const [isChangeInput, setIsChangeInput] = useState(true);\n  const [isChangeToCurrency, setIsChangeToCurrency] = useState(false);\n  const [isChangeFromCurrency, setIsChangeFromCurrency] = useState(false);\n  const [minAmount, setMinAmount] = useState(1);\n  const [maxAmount, setMaxAmount] = useState(1);\n  const getExchangeRate = async (toCurrencyAmount, fromCurrencyAmount, isChangeReceiveAmount) => {\n    if (!isChangeInput || !toCurrency.shortName || !fromCurrency.shortName) return;\n    const filterShortName = input => {\n      return input.replace(/\\(.*?\\)/g, \"\").trim();\n    };\n    const noNetShrtTo = filterShortName(fromCurrency.shortName);\n    const noNetShrtFrom = filterShortName(toCurrency.shortName);\n    const isChange = isChangeReceiveAmount ? \"True\" : \"false\";\n    const newForm = await fetch(`${serveUrl}/calculator/${noNetShrtTo}/${noNetShrtFrom}/${fromCurrencyAmount || \"0.001\"}/${toCurrencyAmount || \"0.001\"}/${isChange}`, {\n      method: \"POST\"\n    }).then(res => res.json());\n    if (isChangeReceiveAmount) {\n      setFromCurrencyAmount(getFixedAmount(newForm.amount));\n    } else {\n      setToCurrencyAmount(getFixedAmount(newForm.amount));\n    }\n    setIsChangeInput(false);\n    console.log(newForm.amount);\n  };\n  const getFromCurrencyRange = currency => {\n    return ranges[currency] || {\n      min: 1,\n      max: 1000\n    }; // Default range if currency is not found\n  };\n\n  const getToCurrencyRange = currency => {\n    return ranges[currency] || {\n      min: 1,\n      max: 1000\n    }; // Default range if currency is not found\n  };\n\n  const config = {\n    fromCurrenycRange: {\n      from: minAmount,\n      to: maxAmount\n    },\n    toCurrenycRange: {\n      from: minAmount,\n      to: maxAmount\n    }\n  };\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, false);\n  }, [fromCurrencyAmount, isChangeFromCurrency]);\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, true);\n  }, [toCurrencyAmount, isChangeToCurrency]);\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeFromCurrency(prev => !prev);\n  }, [fromCurrency]);\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeToCurrency(prev => !prev);\n  }, [toCurrency]);\n  const changeFromAmount = amount => {\n    if (Number(amount) <= config.fromCurrenycRange.to && Number(amount) >= config.fromCurrenycRange.from) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.fromCurrenycRange.from}`);\n    }\n  };\n  const changeToAmount = amount => {\n    if (Number(amount) <= config.toCurrenycRange.to && Number(amount) >= config.toCurrenycRange.from) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.toCurrenycRange.from}`);\n    }\n  };\n  return {\n    exchangeRate: config,\n    fromCurrencyAmount,\n    toCurrencyAmount,\n    setFromCurrencyAmount: changeFromAmount,\n    setToCurrencyAmount: changeToAmount,\n    setIsChangeInput\n  };\n};\n_s(useExchangeRate, \"FTvtzp7/cv29rb3QJJioNzRu5pE=\", false, function () {\n  return [useAppSelector];\n});\nexport default useExchangeRate;","map":{"version":3,"names":["useEffect","useState","serveUrl","useAppSelector","getFixedAmount","amount","toFixed","ranges","BTC","min","max","ETH","USD","useExchangeRate","fromCurrency","toCurrency","state","exchange","fromCurrencyAmount","setFromCurrencyAmount","toCurrencyAmount","setToCurrencyAmount","isChangeInput","setIsChangeInput","isChangeToCurrency","setIsChangeToCurrency","isChangeFromCurrency","setIsChangeFromCurrency","minAmount","setMinAmount","maxAmount","setMaxAmount","getExchangeRate","isChangeReceiveAmount","shortName","filterShortName","input","replace","trim","noNetShrtTo","noNetShrtFrom","isChange","newForm","fetch","method","then","res","json","console","log","getFromCurrencyRange","currency","getToCurrencyRange","config","fromCurrenycRange","from","to","toCurrenycRange","prev","changeFromAmount","Number","changeToAmount","exchangeRate"],"sources":["C:/Users/1/Downloads/naebalovo.com/client/src/screens/home/components/exchange/components/form/hooks/useExchangeRate.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { serveUrl } from \"../../../../../../../config\";\nimport { useAppSelector } from \"../../../../../../../store/hooks\";\n\nconst getFixedAmount = (amount: number) => {\n  if (amount.toFixed(7) === \"0,0000000\" || amount.toFixed(7) === \"0.0000000\")\n    return \"0\";\n  return amount.toFixed(7);\n};\nconst ranges: Record<string, { min: number; max: number }> = {\n  BTC: { min: 0.0001, max: 10 },\n  ETH: { min: 0.01, max: 100 },\n  USD: { min: 1, max: 100000 },\n  // Add more currency ranges as needed\n};\n\nconst useExchangeRate = () => {\n  const { fromCurrency, toCurrency } = useAppSelector(\n    (state) => state.exchange\n  );\n\n  const [fromCurrencyAmount, setFromCurrencyAmount] = useState(\"0.01\");\n  const [toCurrencyAmount, setToCurrencyAmount] = useState(\"\");\n  const [isChangeInput, setIsChangeInput] = useState(true);\n  const [isChangeToCurrency, setIsChangeToCurrency] = useState(false);\n  const [isChangeFromCurrency, setIsChangeFromCurrency] = useState(false);\n  const [minAmount, setMinAmount] = useState(1);\n  const [maxAmount, setMaxAmount] = useState(1);\n\n  const getExchangeRate = async (\n    toCurrencyAmount: string,\n    fromCurrencyAmount: string,\n    isChangeReceiveAmount: boolean\n  ) => {\n    if (!isChangeInput || !toCurrency.shortName || !fromCurrency.shortName)\n      return;\n\n    const filterShortName = (input: string) => {\n      return input.replace(/\\(.*?\\)/g, \"\").trim();\n    };\n\n    const noNetShrtTo = filterShortName(fromCurrency.shortName);\n    const noNetShrtFrom = filterShortName(toCurrency.shortName);\n\n    const isChange = isChangeReceiveAmount ? \"True\" : \"false\";\n    const newForm = await fetch(\n      `${serveUrl}/calculator/${noNetShrtTo}/${noNetShrtFrom}/${\n        fromCurrencyAmount || \"0.001\"\n      }/${toCurrencyAmount || \"0.001\"}/${isChange}`,\n      {\n        method: \"POST\",\n      }\n    ).then((res) => res.json());\n\n    if (isChangeReceiveAmount) {\n      setFromCurrencyAmount(getFixedAmount(newForm.amount));\n    } else {\n      setToCurrencyAmount(getFixedAmount(newForm.amount));\n    }\n    setIsChangeInput(false);\n    console.log(newForm.amount);\n  };\n\n  const getFromCurrencyRange = (currency: string) => {\n    return ranges[currency] || { min: 1, max: 1000 }; // Default range if currency is not found\n  };\n  const getToCurrencyRange = (currency: string) => {\n    return ranges[currency] || { min: 1, max: 1000 }; // Default range if currency is not found\n  };\n\n  const config = {\n    fromCurrenycRange: {\n      from: minAmount,\n      to: maxAmount,\n    },\n    toCurrenycRange: {\n      from: minAmount,\n      to: maxAmount,\n    },\n  };\n\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, false);\n  }, [fromCurrencyAmount, isChangeFromCurrency]);\n\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, true);\n  }, [toCurrencyAmount, isChangeToCurrency]);\n\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeFromCurrency((prev) => !prev);\n  }, [fromCurrency]);\n\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeToCurrency((prev) => !prev);\n  }, [toCurrency]);\n\n  const changeFromAmount = (amount: string) => {\n    if (\n      Number(amount) <= config.fromCurrenycRange.to &&\n      Number(amount) >= config.fromCurrenycRange.from\n    ) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.fromCurrenycRange.from}`);\n    }\n  };\n\n  const changeToAmount = (amount: string) => {\n    if (\n      Number(amount) <= config.toCurrenycRange.to &&\n      Number(amount) >= config.toCurrenycRange.from\n    ) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.toCurrenycRange.from}`);\n    }\n  };\n\n  return {\n    exchangeRate: config,\n    fromCurrencyAmount,\n    toCurrencyAmount,\n    setFromCurrencyAmount: changeFromAmount,\n    setToCurrencyAmount: changeToAmount,\n    setIsChangeInput,\n  };\n};\n\nexport default useExchangeRate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}