{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Downloads\\\\exchangePro-main\\\\client\\\\src\\\\screens\\\\home\\\\components\\\\exchange\\\\components\\\\currenciesList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useAppSelector } from \"../../../../../../store/hooks\";\nimport useCurrency from \"../../hooks/useCurrency\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrenciesList = _ref => {\n  _s();\n  let {\n    isTo\n  } = _ref;\n  const {\n    setFromCurrency,\n    setToCurrency\n  } = useCurrency();\n  const toCurrency = useAppSelector(state => state.exchange.toCurrency);\n  const fromCurrency = useAppSelector(state => state.exchange.fromCurrency);\n  const currencies = useAppSelector(state => state.exchange.currencies);\n  const handleSelectCurrency = (shortName, fullName) => {\n    if (isTo && fromCurrency.fullName !== fullName) {\n      setToCurrency(shortName, fullName);\n    }\n    if (!isTo && toCurrency.fullName !== fullName) {\n      setFromCurrency(shortName, fullName);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"fruit\",\n        children: \"Fruit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"vegetable\",\n        children: \"Vegetable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"meat\",\n        children: \"Meat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n  //    <>\n  //      {currencies\n  //        ? currencies.map((currency) => (\n  //            <li\n  //              key={currency.fullName}\n  //              className={`exchange__block-item exchange__block-item-send ${getActiveCurrencyStyle(\n  //                isTo,\n  //                currency.fullName,\n  //                fromCurrency.fullName,\n  //                toCurrency.fullName\n  //              )}`}\n  //              onClick={() =>\n  //                handleSelectCurrency(currency.shortName, currency.fullName)\n  //              }\n  //            >\n  //              <div>\n  //                <select>\n  //                  <option value=\"fruit\">Fruit</option>\n  //\n  //                  <option value=\"vegetable\">Vegetable</option>\n  //\n  //                  <option value=\"meat\">Meat</option>\n  //                </select>\n  //              </div>\n  //              <img\n  //                src={`../../../../../static/${currency.imageUrlP}.svg`} //${getEnv(process.env.REACT_APP_SERVER_URL,\"REACT_APP_SERVER_URL\")}\n  //                alt=\"\"\n  //              />\n  //            </li>\n  //          ))\n  //        : \"\"}\n  //    </>\n  ;\n};\n_s(CurrenciesList, \"G7dyueIoYiD0W2IsZ5zl6AyIjzU=\", false, function () {\n  return [useCurrency, useAppSelector, useAppSelector, useAppSelector];\n});\n_c = CurrenciesList;\nexport default CurrenciesList;\nvar _c;\n$RefreshReg$(_c, \"CurrenciesList\");","map":{"version":3,"names":["useAppSelector","useCurrency","CurrenciesList","isTo","setFromCurrency","setToCurrency","toCurrency","state","exchange","fromCurrency","currencies","handleSelectCurrency","shortName","fullName"],"sources":["C:/Users/1/Downloads/exchangePro-main/client/src/screens/home/components/exchange/components/currenciesList/index.tsx"],"sourcesContent":["import { useAppSelector } from \"../../../../../../store/hooks\";\nimport { getEnv } from \"../../../../../../utils\";\nimport useCurrency from \"../../hooks/useCurrency\";\nimport { getActiveCurrencyStyle } from \"./helpers\";\ninterface IProps {\n  isTo: boolean;\n}\n\nconst CurrenciesList = ({ isTo }: IProps) => {\n  const { setFromCurrency, setToCurrency } = useCurrency();\n  const toCurrency = useAppSelector((state) => state.exchange.toCurrency);\n  const fromCurrency = useAppSelector((state) => state.exchange.fromCurrency);\n  const currencies = useAppSelector((state) => state.exchange.currencies);\n  const handleSelectCurrency = (shortName: string, fullName: string) => {\n    if (isTo && fromCurrency.fullName !== fullName) {\n      setToCurrency(shortName, fullName);\n    }\n    if (!isTo && toCurrency.fullName !== fullName) {\n      setFromCurrency(shortName, fullName);\n    }\n  };\n\n  return (\n    <div>\n      <select>\n        <option value=\"fruit\">Fruit</option>\n\n        <option value=\"vegetable\">Vegetable</option>\n\n        <option value=\"meat\">Meat</option>\n      </select>\n    </div>\n    //    <>\n    //      {currencies\n    //        ? currencies.map((currency) => (\n    //            <li\n    //              key={currency.fullName}\n    //              className={`exchange__block-item exchange__block-item-send ${getActiveCurrencyStyle(\n    //                isTo,\n    //                currency.fullName,\n    //                fromCurrency.fullName,\n    //                toCurrency.fullName\n    //              )}`}\n    //              onClick={() =>\n    //                handleSelectCurrency(currency.shortName, currency.fullName)\n    //              }\n    //            >\n    //              <div>\n    //                <select>\n    //                  <option value=\"fruit\">Fruit</option>\n    //\n    //                  <option value=\"vegetable\">Vegetable</option>\n    //\n    //                  <option value=\"meat\">Meat</option>\n    //                </select>\n    //              </div>\n    //              <img\n    //                src={`../../../../../static/${currency.imageUrlP}.svg`} //${getEnv(process.env.REACT_APP_SERVER_URL,\"REACT_APP_SERVER_URL\")}\n    //                alt=\"\"\n    //              />\n    //            </li>\n    //          ))\n    //        : \"\"}\n    //    </>\n  );\n};\n\nexport default CurrenciesList;\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,+BAA+B;AAE9D,OAAOC,WAAW,MAAM,yBAAyB;AAAC;AAMlD,MAAMC,cAAc,GAAG,QAAsB;EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC;EACtC,MAAM;IAAEC,eAAe;IAAEC;EAAc,CAAC,GAAGJ,WAAW,EAAE;EACxD,MAAMK,UAAU,GAAGN,cAAc,CAAEO,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACF,UAAU,CAAC;EACvE,MAAMG,YAAY,GAAGT,cAAc,CAAEO,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACC,YAAY,CAAC;EAC3E,MAAMC,UAAU,GAAGV,cAAc,CAAEO,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACE,UAAU,CAAC;EACvE,MAAMC,oBAAoB,GAAG,CAACC,SAAiB,EAAEC,QAAgB,KAAK;IACpE,IAAIV,IAAI,IAAIM,YAAY,CAACI,QAAQ,KAAKA,QAAQ,EAAE;MAC9CR,aAAa,CAACO,SAAS,EAAEC,QAAQ,CAAC;IACpC;IACA,IAAI,CAACV,IAAI,IAAIG,UAAU,CAACO,QAAQ,KAAKA,QAAQ,EAAE;MAC7CT,eAAe,CAACQ,SAAS,EAAEC,QAAQ,CAAC;IACtC;EACF,CAAC;EAED,oBACE;IAAA,uBACE;MAAA,wBACE;QAAQ,KAAK,EAAC,OAAO;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,eAEpC;QAAQ,KAAK,EAAC,WAAW;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS,eAE5C;QAAQ,KAAK,EAAC,MAAM;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAC3B;IAAA;IAAA;IAAA;EAAA;EAEX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAC,GAzDIX,cAAc;EAAA,QACyBD,WAAW,EACnCD,cAAc,EACZA,cAAc,EAChBA,cAAc;AAAA;AAAA,KAJ7BE,cAAc;AA2DpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}