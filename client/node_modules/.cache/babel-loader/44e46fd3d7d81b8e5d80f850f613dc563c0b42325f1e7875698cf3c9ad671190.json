{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport { serveUrl } from \"../../config\";\nimport { io } from \"socket.io-client\";\nconst useChat = () => {\n  _s();\n  const ishidden = useAppSelector(state => state.exchange.chatIsHidden);\n  const [messages, setMessages] = useState([\n    /*{\n      id: 1,\n      text: \"Hello my friend!\",\n      createdAt: \"2021-07-21 12:09:12\",\n      user: {\n        id: 1,\n      },\n    },\n    {\n      id: 2,\n      text: \"Hello!\",\n      createdAt: \"2021-07-21 14:09:12\",\n      user: {\n        id: 2,\n      },\n    },*/\n  ]);\n  const getHistoy = async () => {\n    const history = await fetch(`${serveUrl}/msgHistory/${localStorage.getItem(\"userId\")}`).then(res => res.json());\n    if (history.length > 0) {\n      setMessages(history.map(elem => ({\n        id: elem.id,\n        text: elem.text,\n        createdAt: elem.timestamp,\n        user: {\n          id: elem.user === \"true\" ? 2 : 1\n        }\n      })));\n    }\n  };\n  const sendMessage = async message => {\n    const messageTextEncoded = encodeURIComponent(message.text);\n    const userId = localStorage.getItem(\"userId\");\n    const timestamp = new Date().getTime();\n    await fetch(`${serveUrl}/msgSave/${messageTextEncoded}/${userId}/${timestamp}/true`, {\n      method: \"POST\"\n    });\n    getHistoy();\n  };\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    const socket = io(serveUrl);\n    socket.on(`removeChat_${userId}`, async () => {\n      try {\n        await fetch(`${serveUrl}/hideChat`, {\n          method: \"POST\"\n        }).then(res => res.json());\n        window.location.reload();\n      } catch (error) {\n        console.error(error.message);\n      }\n    });\n    const timer = setInterval(() => {\n      getHistoy();\n    }, 50000);\n    return () => clearInterval(timer);\n  });\n  return {\n    messages,\n    sendMessage,\n    ishidden\n  };\n};\n_s(useChat, \"sVHtbEebnIkdjYgXlL+s9jw+6WU=\", false, function () {\n  return [useAppSelector];\n});\nexport default useChat;","map":{"version":3,"names":["useState","useEffect","useAppSelector","serveUrl","io","useChat","_s","ishidden","state","exchange","chatIsHidden","messages","setMessages","getHistoy","history","fetch","localStorage","getItem","then","res","json","length","map","elem","id","text","createdAt","timestamp","user","sendMessage","message","messageTextEncoded","encodeURIComponent","userId","Date","getTime","method","socket","on","window","location","reload","error","console","timer","setInterval","clearInterval"],"sources":["C:/Users/1/Videos/exchangePro-main/client/src/components/chat/useChat.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport { Message } from \"react-simple-chat\";\nimport { serveUrl } from \"../../config\";\nimport { io } from \"socket.io-client\";\n\nconst useChat = () => {\n  const ishidden = useAppSelector((state) => state.exchange.chatIsHidden);\n  const [messages, setMessages] = useState<Message[]>([\n    /*{\n      id: 1,\n      text: \"Hello my friend!\",\n      createdAt: \"2021-07-21 12:09:12\",\n      user: {\n        id: 1,\n      },\n    },\n    {\n      id: 2,\n      text: \"Hello!\",\n      createdAt: \"2021-07-21 14:09:12\",\n      user: {\n        id: 2,\n      },\n    },*/\n  ]);\n\n  const getHistoy = async () => {\n    const history = await fetch(\n      `${serveUrl}/msgHistory/${localStorage.getItem(\"userId\")}`\n    ).then((res) => res.json());\n\n    if (history.length > 0) {\n      setMessages(\n        history.map((elem: any) => ({\n          id: elem.id,\n          text: elem.text,\n          createdAt: elem.timestamp,\n          user: {\n            id: elem.user === \"true\" ? 2 : 1,\n          },\n        }))\n      );\n    }\n  };\n\n  const sendMessage = async (message: Message) => {\n    const messageTextEncoded = encodeURIComponent(message.text);\n    const userId = localStorage.getItem(\"userId\");\n    const timestamp = new Date().getTime();\n    await fetch(\n      `${serveUrl}/msgSave/${messageTextEncoded}/${userId}/${timestamp}/true`,\n      {\n        method: \"POST\",\n      }\n    );\n\n    getHistoy();\n  };\n\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    const socket = io(serveUrl);\n\n    socket.on(`removeChat_${userId}`, async () => {\n      try {\n        await fetch(`${serveUrl}/hideChat`, {\n          method: \"POST\",\n        }).then((res) => res.json());\n        window.location.reload();\n      } catch (error: any) {\n        console.error(error.message);\n      }\n    });\n\n    const timer = setInterval(() => {\n      getHistoy();\n    }, 50000);\n\n    return () => clearInterval(timer);\n  });\n\n  return {\n    messages,\n    sendMessage,\n    ishidden,\n  };\n};\n\nexport default useChat;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAqB,OAAO;AACxD,SAASC,cAAc,QAAQ,mBAAmB;AAElD,SAASC,QAAQ,QAAQ,cAAc;AACvC,SAASC,EAAE,QAAQ,kBAAkB;AAErC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGL,cAAc,CAAEM,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACC,YAAY,CAAC;EACvE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAY;IAClD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfI,CAgBD,CAAC;EAEF,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,OAAO,GAAG,MAAMC,KAAK,CACzB,GAAGZ,QAAQ,eAAea,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAC1D,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;IAE3B,IAAIN,OAAO,CAACO,MAAM,GAAG,CAAC,EAAE;MACtBT,WAAW,CACTE,OAAO,CAACQ,GAAG,CAAEC,IAAS,KAAM;QAC1BC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,SAAS,EAAEH,IAAI,CAACI,SAAS;QACzBC,IAAI,EAAE;UACJJ,EAAE,EAAED,IAAI,CAACK,IAAI,KAAK,MAAM,GAAG,CAAC,GAAG;QACjC;MACF,CAAC,CAAC,CACJ,CAAC;IACH;EACF,CAAC;EAED,MAAMC,WAAW,GAAG,MAAOC,OAAgB,IAAK;IAC9C,MAAMC,kBAAkB,GAAGC,kBAAkB,CAACF,OAAO,CAACL,IAAI,CAAC;IAC3D,MAAMQ,MAAM,GAAGjB,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMU,SAAS,GAAG,IAAIO,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IACtC,MAAMpB,KAAK,CACT,GAAGZ,QAAQ,YAAY4B,kBAAkB,IAAIE,MAAM,IAAIN,SAAS,OAAO,EACvE;MACES,MAAM,EAAE;IACV,CACF,CAAC;IAEDvB,SAAS,CAAC,CAAC;EACb,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,MAAMgC,MAAM,GAAGjB,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMoB,MAAM,GAAGjC,EAAE,CAACD,QAAQ,CAAC;IAE3BkC,MAAM,CAACC,EAAE,CAAC,cAAcL,MAAM,EAAE,EAAE,YAAY;MAC5C,IAAI;QACF,MAAMlB,KAAK,CAAC,GAAGZ,QAAQ,WAAW,EAAE;UAClCiC,MAAM,EAAE;QACV,CAAC,CAAC,CAAClB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;QAC5BmB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAU,EAAE;QACnBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACZ,OAAO,CAAC;MAC9B;IACF,CAAC,CAAC;IAEF,MAAMc,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BhC,SAAS,CAAC,CAAC;IACb,CAAC,EAAE,KAAK,CAAC;IAET,OAAO,MAAMiC,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,CAAC;EAEF,OAAO;IACLjC,QAAQ;IACRkB,WAAW;IACXtB;EACF,CAAC;AACH,CAAC;AAACD,EAAA,CAjFID,OAAO;EAAA,QACMH,cAAc;AAAA;AAkFjC,eAAeG,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}