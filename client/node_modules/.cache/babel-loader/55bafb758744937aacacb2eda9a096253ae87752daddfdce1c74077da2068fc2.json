{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { serveUrl } from \"../config\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { dispatchOrder } from \"../store/slices/exchange\";\nimport { io } from \"socket.io-client\";\nconst socketUrl = `${serveUrl}/api/socket.io/`;\nconst useOrderInfo = () => {\n  _s();\n  const {\n    orderId\n  } = useParams();\n  const order = useAppSelector(state => state.exchange.orderInfo);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const getOrder = async () => {\n    const order = await fetch(`${serveUrl}/order/${orderId}`).then(res => res.json());\n    if (order.error) {\n      navigate(\"/\");\n    }\n    dispatch(dispatchOrder(order));\n  };\n  const confirmOrder = async () => {\n    try {\n      await fetch(`${serveUrl}/confirm/${orderId}`, {\n        method: \"POST\"\n      }).then(res => res.json());\n      //window.location.reload();\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  useEffect(() => {\n    if (!order) {\n      getOrder();\n    }\n  });\n  useEffect(() => {\n    const socket = io(socketUrl);\n    socket.on(`redirect_user_${orderId}`, async () => {\n      try {\n        await fetch(`${serveUrl}/confirm/${orderId}/passed`, {\n          method: \"POST\"\n        }).then(res => res.json());\n        window.location.reload();\n      } catch (error) {\n        console.error(error.message);\n      }\n    });\n  });\n  return {\n    orderInfo: order,\n    orderId,\n    confirmOrder\n  };\n};\n_s(useOrderInfo, \"MBMcXpfv0Jp3Hu0/5xDaNWGaCGo=\", false, function () {\n  return [useParams, useAppSelector, useAppDispatch, useNavigate];\n});\nexport default useOrderInfo;","map":{"version":3,"names":["useEffect","useNavigate","useParams","serveUrl","useAppDispatch","useAppSelector","dispatchOrder","io","socketUrl","useOrderInfo","orderId","order","state","exchange","orderInfo","dispatch","navigate","getOrder","fetch","then","res","json","error","confirmOrder","method","console","message","socket","on","window","location","reload"],"sources":["C:/Users/diarrhea/Documents/exchangePro-main/client/src/hooks/useOrderInfo.ts"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { serveUrl } from \"../config\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { dispatchOrder } from \"../store/slices/exchange\";\nimport { io } from \"socket.io-client\";\n\nconst socketUrl = `${serveUrl}/api/socket.io/`;\n\nconst useOrderInfo = () => {\n  const { orderId } = useParams();\n  const order = useAppSelector((state) => state.exchange.orderInfo);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const getOrder = async () => {\n    const order = await fetch(`${serveUrl}/order/${orderId}`).then((res) =>\n      res.json()\n    );\n\n    if (order.error) {\n      navigate(\"/\");\n    }\n\n    dispatch(dispatchOrder(order));\n  };\n\n  const confirmOrder = async () => {\n    try {\n      await fetch(`${serveUrl}/confirm/${orderId}`, {\n        method: \"POST\",\n      }).then((res) => res.json());\n      //window.location.reload();\n    } catch (error: any) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (!order) {\n      getOrder();\n    }\n  });\n\n  useEffect(() => {\n    const socket = io(socketUrl);\n\n    socket.on(`redirect_user_${orderId}`, async () => {\n      try {\n        await fetch(`${serveUrl}/confirm/${orderId}/passed`, {\n          method: \"POST\",\n        }).then((res) => res.json());\n        window.location.reload();\n      } catch (error: any) {\n        console.error(error.message);\n      }\n    });\n  });\n\n  return {\n    orderInfo: order,\n    orderId,\n    confirmOrder,\n  };\n};\n\nexport default useOrderInfo;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC/D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,EAAE,QAAQ,kBAAkB;AAErC,MAAMC,SAAS,GAAI,GAAEL,QAAS,iBAAgB;AAE9C,MAAMM,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM;IAAEC;EAAQ,CAAC,GAAGR,SAAS,EAAE;EAC/B,MAAMS,KAAK,GAAGN,cAAc,CAAEO,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACC,SAAS,CAAC;EACjE,MAAMC,QAAQ,GAAGX,cAAc,EAAE;EACjC,MAAMY,QAAQ,GAAGf,WAAW,EAAE;EAE9B,MAAMgB,QAAQ,GAAG,YAAY;IAC3B,MAAMN,KAAK,GAAG,MAAMO,KAAK,CAAE,GAAEf,QAAS,UAASO,OAAQ,EAAC,CAAC,CAACS,IAAI,CAAEC,GAAG,IACjEA,GAAG,CAACC,IAAI,EAAE,CACX;IAED,IAAIV,KAAK,CAACW,KAAK,EAAE;MACfN,QAAQ,CAAC,GAAG,CAAC;IACf;IAEAD,QAAQ,CAACT,aAAa,CAACK,KAAK,CAAC,CAAC;EAChC,CAAC;EAED,MAAMY,YAAY,GAAG,YAAY;IAC/B,IAAI;MACF,MAAML,KAAK,CAAE,GAAEf,QAAS,YAAWO,OAAQ,EAAC,EAAE;QAC5Cc,MAAM,EAAE;MACV,CAAC,CAAC,CAACL,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;MAC5B;IACF,CAAC,CAAC,OAAOC,KAAU,EAAE;MACnBG,OAAO,CAACH,KAAK,CAACA,KAAK,CAACI,OAAO,CAAC;IAC9B;EACF,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,KAAK,EAAE;MACVM,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC;EAEFjB,SAAS,CAAC,MAAM;IACd,MAAM2B,MAAM,GAAGpB,EAAE,CAACC,SAAS,CAAC;IAE5BmB,MAAM,CAACC,EAAE,CAAE,iBAAgBlB,OAAQ,EAAC,EAAE,YAAY;MAChD,IAAI;QACF,MAAMQ,KAAK,CAAE,GAAEf,QAAS,YAAWO,OAAQ,SAAQ,EAAE;UACnDc,MAAM,EAAE;QACV,CAAC,CAAC,CAACL,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;QAC5BQ,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1B,CAAC,CAAC,OAAOT,KAAU,EAAE;QACnBG,OAAO,CAACH,KAAK,CAACA,KAAK,CAACI,OAAO,CAAC;MAC9B;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAO;IACLZ,SAAS,EAAEH,KAAK;IAChBD,OAAO;IACPa;EACF,CAAC;AACH,CAAC;AAAC,GAvDId,YAAY;EAAA,QACIP,SAAS,EACfG,cAAc,EACXD,cAAc,EACdH,WAAW;AAAA;AAqD9B,eAAeQ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}