{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/diarrhea/Downloads/exchangePro-main/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/diarrhea/Downloads/exchangePro-main/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/diarrhea/Downloads/exchangePro-main/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import{serveUrl}from\"../../config\";var useChat=function useChat(){var _useState=useState([/*{\n      id: 1,\n      text: \"Hello my friend!\",\n      createdAt: \"2021-07-21 12:09:12\",\n      user: {\n        id: 1,\n      },\n    },\n    {\n      id: 2,\n      text: \"Hello!\",\n      createdAt: \"2021-07-21 14:09:12\",\n      user: {\n        id: 2,\n      },\n    },*/]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var getHistoy=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var userId,history;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:userId=localStorage.getItem(\"userId\");_context.next=3;return fetch(\"\".concat(serveUrl,\"/msgHistory/\").concat(userId)).then(function(res){return res.json();});case 3:history=_context.sent;if(history.length>0){setMessages(history.map(function(elem){return{id:elem.id,text:elem.text,createdAt:elem.timestamp,user:{id:elem.user===\"true\"?2:1}};}));}case 5:case\"end\":return _context.stop();}},_callee);}));return function getHistoy(){return _ref.apply(this,arguments);};}();var sendMessage=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(message){var messageTextEncoded,userId,timestamp;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:messageTextEncoded=encodeURIComponent(message.text);userId=localStorage.getItem(\"userId\");timestamp=new Date().getTime();_context2.next=5;return fetch(\"\".concat(serveUrl,\"/msgSave/\").concat(messageTextEncoded,\"/\").concat(userId,\"/\").concat(timestamp,\"/true\"),{method:\"POST\"});case 5:getHistoy();case 6:case\"end\":return _context2.stop();}},_callee2);}));return function sendMessage(_x){return _ref2.apply(this,arguments);};}();useEffect(function(){var timer=setInterval(function(){getHistoy();},5000);return function(){return clearInterval(timer);};});return{messages:messages,sendMessage:sendMessage};};export default useChat;","map":{"version":3,"names":["useState","useEffect","serveUrl","useChat","messages","setMessages","getHistoy","userId","localStorage","getItem","fetch","then","res","json","history","length","map","elem","id","text","createdAt","timestamp","user","sendMessage","message","messageTextEncoded","encodeURIComponent","Date","getTime","method","timer","setInterval","clearInterval"],"sources":["C:/Users/diarrhea/Downloads/exchangePro-main/client/src/components/chat/useChat.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { Message } from \"react-simple-chat\";\nimport { serveUrl } from \"../../config\";\n\nconst useChat = () => {\n  const [messages, setMessages] = useState<Message[]>([\n    /*{\n      id: 1,\n      text: \"Hello my friend!\",\n      createdAt: \"2021-07-21 12:09:12\",\n      user: {\n        id: 1,\n      },\n    },\n    {\n      id: 2,\n      text: \"Hello!\",\n      createdAt: \"2021-07-21 14:09:12\",\n      user: {\n        id: 2,\n      },\n    },*/\n  ]);\n\n  const getHistoy = async () => {\n    const userId = localStorage.getItem(\"userId\");\n\n    const history = await fetch(`${serveUrl}/msgHistory/${userId}`).then(\n      (res) => res.json()\n    );\n\n    if (history.length > 0) {\n      setMessages(\n        history.map((elem: any) => ({\n          id: elem.id,\n          text: elem.text,\n          createdAt: elem.timestamp,\n          user: {\n            id: elem.user === \"true\" ? 2 : 1,\n          },\n        }))\n      );\n    }\n  };\n\n  const sendMessage = async (message: Message) => {\n    const messageTextEncoded = encodeURIComponent(message.text);\n    const userId = localStorage.getItem(\"userId\");\n    const timestamp = new Date().getTime();\n    await fetch(\n      `${serveUrl}/msgSave/${messageTextEncoded}/${userId}/${timestamp}/true`,\n      {\n        method: \"POST\",\n      }\n    );\n\n    getHistoy();\n  };\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      getHistoy();\n    }, 5000);\n\n    return () => clearInterval(timer);\n  });\n\n  return {\n    messages,\n    sendMessage,\n  };\n};\n\nexport default useChat;\n"],"mappings":"2aAAA,OAASA,QAAQ,CAAEC,SAAS,KAAqB,OAAO,CAExD,OAASC,QAAQ,KAAQ,cAAc,CAEvC,GAAMC,QAAO,CAAG,QAAVA,QAAO,EAAS,CACpB,cAAgCH,QAAQ,CAAY,CAClD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAfI,CAgBD,CAAC,wCAjBKI,QAAQ,eAAEC,WAAW,eAmB5B,GAAMC,UAAS,4FAAG,uJACVC,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,uBAEvBC,MAAK,WAAIR,QAAQ,wBAAeK,MAAM,EAAG,CAACI,IAAI,CAClE,SAACC,GAAG,QAAKA,IAAG,CAACC,IAAI,EAAE,GACpB,QAFKC,OAAO,eAIb,GAAIA,OAAO,CAACC,MAAM,CAAG,CAAC,CAAE,CACtBV,WAAW,CACTS,OAAO,CAACE,GAAG,CAAC,SAACC,IAAS,QAAM,CAC1BC,EAAE,CAAED,IAAI,CAACC,EAAE,CACXC,IAAI,CAAEF,IAAI,CAACE,IAAI,CACfC,SAAS,CAAEH,IAAI,CAACI,SAAS,CACzBC,IAAI,CAAE,CACJJ,EAAE,CAAED,IAAI,CAACK,IAAI,GAAK,MAAM,CAAG,CAAC,CAAG,CACjC,CACF,CAAC,EAAC,CAAC,CACJ,CACH,CAAC,qDACF,kBAnBKhB,UAAS,0CAmBd,CAED,GAAMiB,YAAW,6FAAG,kBAAOC,OAAgB,+JACnCC,kBAAkB,CAAGC,kBAAkB,CAACF,OAAO,CAACL,IAAI,CAAC,CACrDZ,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CACvCY,SAAS,CAAG,GAAIM,KAAI,EAAE,CAACC,OAAO,EAAE,wBAChClB,MAAK,WACNR,QAAQ,qBAAYuB,kBAAkB,aAAIlB,MAAM,aAAIc,SAAS,UAChE,CACEQ,MAAM,CAAE,MACV,CAAC,CACF,QAEDvB,SAAS,EAAE,CAAC,uDACb,kBAZKiB,YAAW,6CAYhB,CAEDtB,SAAS,CAAC,UAAM,CACd,GAAM6B,MAAK,CAAGC,WAAW,CAAC,UAAM,CAC9BzB,SAAS,EAAE,CACb,CAAC,CAAE,IAAI,CAAC,CAER,MAAO,kBAAM0B,cAAa,CAACF,KAAK,CAAC,GACnC,CAAC,CAAC,CAEF,MAAO,CACL1B,QAAQ,CAARA,QAAQ,CACRmB,WAAW,CAAXA,WACF,CAAC,CACH,CAAC,CAED,cAAepB,QAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}