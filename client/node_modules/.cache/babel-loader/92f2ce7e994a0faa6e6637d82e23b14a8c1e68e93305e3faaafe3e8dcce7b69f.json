{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";const initialState={fromCurrency:{shortName:'',fullName:''},toCurrency:{shortName:'',fullName:''},captcha:{num1:`${Math.floor(Math.random()*20)}`,num2:`${Math.floor(Math.random()*20)}`,result:'',isValid:true},receiver:'',isValidReceiver:true,email:'',referalCode:'',currencies:[],orderInfo:null};export const exchangeSile=createSlice({name:'exchange',initialState,reducers:{dispatchFromCurrency:(state,action)=>{if(action.payload){state.fromCurrency=action.payload;}},dispatchToCurrency:(state,action)=>{if(action.payload){state.toCurrency=action.payload;}},generateCaptcha:state=>{state.captcha.num1=`${Math.floor(Math.random()*20)}`;state.captcha.num2=`${Math.floor(Math.random()*20)}`;},dispatchCaptchaResult:(state,action)=>{state.captcha.result=action.payload;},dispatchCaptchaIsValid:(state,action)=>{state.captcha.isValid=action.payload;},dispatchReceiver:(state,action)=>{state.receiver=action.payload;},dispatchIsValidReceiver:(state,action)=>{state.isValidReceiver=action.payload;},dispatchEmail:(state,action)=>{state.email=action.payload;},dispatchReferalCode:(state,action)=>{state.referalCode=action.payload;},dispatchCurrencies:(state,action)=>{state.currencies=action.payload;state.fromCurrency=action.payload[0];state.toCurrency=action.payload[1];},dispatchOrder:(state,action)=>{state.orderInfo=action.payload;}}});export const{dispatchFromCurrency,dispatchToCurrency,generateCaptcha,dispatchCaptchaResult,dispatchEmail,dispatchReceiver,dispatchIsValidReceiver,dispatchReferalCode,dispatchCaptchaIsValid,dispatchCurrencies,dispatchOrder}=exchangeSile.actions;export default exchangeSile.reducer;","map":{"version":3,"names":["createSlice","initialState","fromCurrency","shortName","fullName","toCurrency","captcha","num1","Math","floor","random","num2","result","isValid","receiver","isValidReceiver","email","referalCode","currencies","orderInfo","exchangeSile","name","reducers","dispatchFromCurrency","state","action","payload","dispatchToCurrency","generateCaptcha","dispatchCaptchaResult","dispatchCaptchaIsValid","dispatchReceiver","dispatchIsValidReceiver","dispatchEmail","dispatchReferalCode","dispatchCurrencies","dispatchOrder","actions","reducer"],"sources":["C:/Users/1/Videos/exchangePro-main/client/src/store/slices/exchange.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { ICurrency } from \"../../interfaces\"\n\ninterface IInitialState {\n    fromCurrency: {\n        shortName: string,\n        fullName: string\n    },\n    toCurrency: {\n        shortName: string,\n        fullName: string\n    },\n    captcha: {\n        num1: string,\n        num2: string,\n        result: string,\n        isValid: boolean,\n    },\n    receiver: string,\n    isValidReceiver: boolean,\n    email: string,\n    referalCode: string,\n    currencies: ICurrency[],\n    orderInfo: {\n        receiveAmount: string,\n        receiveCurrency: string,\n        sendAmount: string,\n        sendCurrency: string,\n        receiver: string,\n        wallet: string,\n        status: string\n    } | null\n}\n\nconst initialState: IInitialState = {\n    fromCurrency: {\n        shortName: '',\n        fullName: ''\n    },\n    toCurrency: {\n        shortName: '',\n        fullName: ''\n    },\n    captcha: {\n        num1: `${Math.floor(Math.random() * 20)}`,\n        num2: `${Math.floor(Math.random() * 20)}`,\n        result: '',\n        isValid: true,\n    },\n    receiver: '',\n    isValidReceiver: true,\n    email: '',\n    referalCode: '',\n    currencies: [],\n    orderInfo: null\n}\n\nexport const exchangeSile = createSlice({\n    name: 'exchange',\n    initialState,\n    reducers: {\n        dispatchFromCurrency: (state, action: PayloadAction<IInitialState['fromCurrency']>) => {\n            if (action.payload) {\n                state.fromCurrency = action.payload\n            }\n        },\n        dispatchToCurrency: (state, action: PayloadAction<IInitialState['toCurrency']>) => {\n            if (action.payload) {\n                state.toCurrency = action.payload\n            }\n        },\n        generateCaptcha: (state) => {\n            state.captcha.num1 = `${Math.floor(Math.random() * 20)}`\n            state.captcha.num2 = `${Math.floor(Math.random() * 20)}`\n        },\n        dispatchCaptchaResult: (state, action: PayloadAction<string>) => {\n            state.captcha.result = action.payload\n        },\n        dispatchCaptchaIsValid: (state, action: PayloadAction<boolean>) => {\n            state.captcha.isValid = action.payload\n        },\n        dispatchReceiver: (state, action: PayloadAction<string>) => {\n            state.receiver = action.payload\n        },\n        dispatchIsValidReceiver: (state, action: PayloadAction<boolean>) => {\n            state.isValidReceiver = action.payload\n        },\n        dispatchEmail: (state, action: PayloadAction<string>) => {\n            state.email = action.payload\n        },\n        dispatchReferalCode: (state, action: PayloadAction<string>) => {\n            state.referalCode = action.payload\n        },\n        dispatchCurrencies: (state, action: PayloadAction<ICurrency[]>) => {\n            state.currencies = action.payload\n            state.fromCurrency = action.payload[0]\n            state.toCurrency = action.payload[1]\n        },\n        dispatchOrder: (state, action: PayloadAction<IInitialState['orderInfo']>) => {\n            state.orderInfo = action.payload\n        },\n    }\n})\n\nexport const {\n    dispatchFromCurrency,\n    dispatchToCurrency,\n    generateCaptcha,\n    dispatchCaptchaResult,\n    dispatchEmail,\n    dispatchReceiver,\n    dispatchIsValidReceiver,\n    dispatchReferalCode,\n    dispatchCaptchaIsValid,\n    dispatchCurrencies,\n    dispatchOrder\n} = exchangeSile.actions\nexport default exchangeSile.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}