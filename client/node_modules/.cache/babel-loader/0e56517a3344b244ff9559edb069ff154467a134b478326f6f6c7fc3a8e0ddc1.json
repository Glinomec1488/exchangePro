{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Downloads\\\\exchangePro-main\\\\client\\\\src\\\\screens\\\\home\\\\components\\\\exchange\\\\components\\\\currencyDropdown\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./styles.css\";\nimport arrow from \"../../../../../../assets/drop_arrow.svg\";\nimport { getActiveCurrencyStyle } from \"../currenciesList/helpers\";\nimport { useAppSelector } from \"../../../../../../store/hooks\";\nimport useCurrency from \"../../hooks/useCurrency\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyDropDown = _ref => {\n  _s();\n  let {\n    isTo\n  } = _ref;\n  const [isActive, setIsActive] = useState(false);\n  const {\n    // currencies,\n    setFromCurrency,\n    setToCurrency\n  } = useCurrency();\n  const toCurrency = useAppSelector(state => state.exchange.toCurrency);\n  const fromCurrency = useAppSelector(state => state.exchange.fromCurrency);\n  const currencies = useAppSelector(state => state.exchange.currencies);\n  const handleSelectCurrency = (shortName, fullName) => {\n    if (isTo && fromCurrency.fullName !== fullName) {\n      setToCurrency(shortName, fullName);\n    }\n    if (!isTo && toCurrency.fullName !== fullName) {\n      setFromCurrency(shortName, fullName);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drop_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setIsActive(prev => !prev),\n      className: \"exchange__block-title\",\n      children: [\"YOU SEND\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrow,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isActive ? \"dropdown dropdown_active\" : \"dropdown\",\n      children: currencies && currencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleSelectCurrency(currency.shortName, currency.fullName),\n        className: `exchange__block-item exchange__block-item-send ${getActiveCurrencyStyle(isTo, currency.fullName, fromCurrency.fullName, toCurrency.fullName)}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/static/${currency.imageUrlP}.svg` //{`${getEnv(process.env.REACT_APP_SERVER_URL,\"REACT_APP_SERVER_URL\")}/static/${currency.imageUrlP}.svg`}\n          ,\n          alt: `${currency.fullName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, currency.fullName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrencyDropDown, \"lQ9zau8bvpsyG9EpmbBqrb1S+/c=\", false, function () {\n  return [useCurrency, useAppSelector, useAppSelector, useAppSelector];\n});\n_c = CurrencyDropDown;\nexport default CurrencyDropDown;\nvar _c;\n$RefreshReg$(_c, \"CurrencyDropDown\");","map":{"version":3,"names":["useState","arrow","getActiveCurrencyStyle","useAppSelector","useCurrency","CurrencyDropDown","isTo","isActive","setIsActive","setFromCurrency","setToCurrency","toCurrency","state","exchange","fromCurrency","currencies","handleSelectCurrency","shortName","fullName","prev","map","currency","imageUrlP"],"sources":["C:/Users/1/Downloads/exchangePro-main/client/src/screens/home/components/exchange/components/currencyDropdown/index.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\nimport arrow from \"../../../../../../assets/drop_arrow.svg\";\nimport { getActiveCurrencyStyle } from \"../currenciesList/helpers\";\nimport { useAppSelector } from \"../../../../../../store/hooks\";\nimport { getEnv } from \"../../../../../../utils\";\nimport useCurrency from \"../../hooks/useCurrency\";\n\ninterface IProps {\n  isTo: boolean;\n}\n\nconst CurrencyDropDown = ({ isTo }: IProps) => {\n  const [isActive, setIsActive] = useState(false);\n\n  const {\n    // currencies,\n    setFromCurrency,\n    setToCurrency,\n  } = useCurrency();\n\n  const toCurrency = useAppSelector((state) => state.exchange.toCurrency);\n  const fromCurrency = useAppSelector((state) => state.exchange.fromCurrency);\n  const currencies = useAppSelector((state) => state.exchange.currencies);\n\n  const handleSelectCurrency = (shortName: string, fullName: string) => {\n    if (isTo && fromCurrency.fullName !== fullName) {\n      setToCurrency(shortName, fullName);\n    }\n    if (!isTo && toCurrency.fullName !== fullName) {\n      setFromCurrency(shortName, fullName);\n    }\n  };\n\n  return (\n    <div className=\"drop_container\">\n      <div\n        onClick={() => setIsActive((prev) => !prev)}\n        className=\"exchange__block-title\"\n      >\n        YOU SEND\n        <img src={arrow} alt=\"\" />\n      </div>\n      <div className={isActive ? \"dropdown dropdown_active\" : \"dropdown\"}>\n        {currencies &&\n          currencies.map((currency) => (\n            <div\n              key={currency.fullName}\n              onClick={() =>\n                handleSelectCurrency(currency.shortName, currency.fullName)\n              }\n              className={`exchange__block-item exchange__block-item-send ${getActiveCurrencyStyle(\n                isTo,\n                currency.fullName,\n                fromCurrency.fullName,\n                toCurrency.fullName\n              )}`}\n            >\n              <img\n                src={`/static/${currency.imageUrlP}.svg`} //{`${getEnv(process.env.REACT_APP_SERVER_URL,\"REACT_APP_SERVER_URL\")}/static/${currency.imageUrlP}.svg`}\n                alt={`${currency.fullName}`}\n              />\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CurrencyDropDown;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,SAASC,sBAAsB,QAAQ,2BAA2B;AAClE,SAASC,cAAc,QAAQ,+BAA+B;AAE9D,OAAOC,WAAW,MAAM,yBAAyB;AAAC;AAMlD,MAAMC,gBAAgB,GAAG,QAAsB;EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAM;IACJ;IACAS,eAAe;IACfC;EACF,CAAC,GAAGN,WAAW,EAAE;EAEjB,MAAMO,UAAU,GAAGR,cAAc,CAAES,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACF,UAAU,CAAC;EACvE,MAAMG,YAAY,GAAGX,cAAc,CAAES,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACC,YAAY,CAAC;EAC3E,MAAMC,UAAU,GAAGZ,cAAc,CAAES,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACE,UAAU,CAAC;EAEvE,MAAMC,oBAAoB,GAAG,CAACC,SAAiB,EAAEC,QAAgB,KAAK;IACpE,IAAIZ,IAAI,IAAIQ,YAAY,CAACI,QAAQ,KAAKA,QAAQ,EAAE;MAC9CR,aAAa,CAACO,SAAS,EAAEC,QAAQ,CAAC;IACpC;IACA,IAAI,CAACZ,IAAI,IAAIK,UAAU,CAACO,QAAQ,KAAKA,QAAQ,EAAE;MAC7CT,eAAe,CAACQ,SAAS,EAAEC,QAAQ,CAAC;IACtC;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MACE,OAAO,EAAE,MAAMV,WAAW,CAAEW,IAAI,IAAK,CAACA,IAAI,CAAE;MAC5C,SAAS,EAAC,uBAAuB;MAAA,WAClC,UAEC;QAAK,GAAG,EAAElB,KAAM;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACtB,eACN;MAAK,SAAS,EAAEM,QAAQ,GAAG,0BAA0B,GAAG,UAAW;MAAA,UAChEQ,UAAU,IACTA,UAAU,CAACK,GAAG,CAAEC,QAAQ,iBACtB;QAEE,OAAO,EAAE,MACPL,oBAAoB,CAACK,QAAQ,CAACJ,SAAS,EAAEI,QAAQ,CAACH,QAAQ,CAC3D;QACD,SAAS,EAAG,kDAAiDhB,sBAAsB,CACjFI,IAAI,EACJe,QAAQ,CAACH,QAAQ,EACjBJ,YAAY,CAACI,QAAQ,EACrBP,UAAU,CAACO,QAAQ,CACnB,EAAE;QAAA,uBAEJ;UACE,GAAG,EAAG,WAAUG,QAAQ,CAACC,SAAU,MAAM,CAAC;UAAA;UAC1C,GAAG,EAAG,GAAED,QAAQ,CAACH,QAAS;QAAE;UAAA;UAAA;UAAA;QAAA;MAC5B,GAdGG,QAAQ,CAACH,QAAQ;QAAA;QAAA;QAAA;MAAA,QAgBzB;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAvDIb,gBAAgB;EAAA,QAOhBD,WAAW,EAEID,cAAc,EACZA,cAAc,EAChBA,cAAc;AAAA;AAAA,KAX7BE,gBAAgB;AAyDtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}