{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  fromCurrency: {\n    shortName: \"\",\n    fullName: \"\"\n  },\n  toCurrency: {\n    shortName: \"\",\n    fullName: \"\"\n  },\n  captcha: {\n    num1: `${Math.floor(Math.random() * 20)}`,\n    num2: `${Math.floor(Math.random() * 20)}`,\n    result: \"\",\n    isValid: true\n  },\n  receiver: \"\",\n  isValidReceiver: true,\n  email: \"\",\n  referalCode: \"\",\n  currencies: [],\n  orderInfo: null\n};\nexport const exchangeSile = createSlice({\n  name: \"exchange\",\n  initialState,\n  reducers: {\n    dispatchFromCurrency: (state, action) => {\n      if (action.payload) {\n        state.fromCurrency = action.payload;\n      }\n    },\n    dispatchToCurrency: (state, action) => {\n      if (action.payload) {\n        state.toCurrency = action.payload;\n      }\n    },\n    generateCaptcha: state => {\n      state.captcha.num1 = `${Math.floor(Math.random() * 20)}`;\n      state.captcha.num2 = `${Math.floor(Math.random() * 20)}`;\n    },\n    dispatchCaptchaResult: (state, action) => {\n      state.captcha.result = action.payload;\n    },\n    dispatchCaptchaIsValid: (state, action) => {\n      state.captcha.isValid = action.payload;\n    },\n    dispatchReceiver: (state, action) => {\n      state.receiver = action.payload;\n    },\n    dispatchIsValidReceiver: (state, action) => {\n      state.isValidReceiver = action.payload;\n    },\n    dispatchEmail: (state, action) => {\n      state.email = action.payload;\n    },\n    dispatchReferalCode: (state, action) => {\n      state.referalCode = action.payload;\n    },\n    dispatchCurrencies: (state, action) => {\n      state.currencies = action.payload;\n      state.fromCurrency = action.payload[0];\n      state.toCurrency = action.payload[1];\n    },\n    dispatchOrder: (state, action) => {\n      state.orderInfo = action.payload;\n    }\n  }\n});\nexport const {\n  dispatchFromCurrency,\n  dispatchToCurrency,\n  generateCaptcha,\n  dispatchCaptchaResult,\n  dispatchEmail,\n  dispatchReceiver,\n  dispatchIsValidReceiver,\n  dispatchReferalCode,\n  dispatchCaptchaIsValid,\n  dispatchCurrencies,\n  dispatchOrder\n} = exchangeSile.actions;\nexport default exchangeSile.reducer;","map":{"version":3,"names":["createSlice","initialState","fromCurrency","shortName","fullName","toCurrency","captcha","num1","Math","floor","random","num2","result","isValid","receiver","isValidReceiver","email","referalCode","currencies","orderInfo","exchangeSile","name","reducers","dispatchFromCurrency","state","action","payload","dispatchToCurrency","generateCaptcha","dispatchCaptchaResult","dispatchCaptchaIsValid","dispatchReceiver","dispatchIsValidReceiver","dispatchEmail","dispatchReferalCode","dispatchCurrencies","dispatchOrder","actions","reducer"],"sources":["C:/Users/1/Videos/exchangePro-main/client/src/store/slices/exchange.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { ICurrency } from \"../../interfaces\";\n\ninterface IInitialState {\n  chatIsHidden: boolean;\n  fromCurrency: {\n    shortName: string;\n    fullName: string;\n  };\n  toCurrency: {\n    shortName: string;\n    fullName: string;\n  };\n  captcha: {\n    num1: string;\n    num2: string;\n    result: string;\n    isValid: boolean;\n  };\n  receiver: string;\n  isValidReceiver: boolean;\n  email: string;\n  referalCode: string;\n  currencies: ICurrency[];\n  orderInfo: {\n    receiveAmount: string;\n    receiveCurrency: string;\n    sendAmount: string;\n    sendCurrency: string;\n    receiver: string;\n    wallet: string;\n    status: string;\n  } | null;\n}\n\nconst initialState: IInitialState = {\n  fromCurrency: {\n    shortName: \"\",\n    fullName: \"\",\n  },\n  toCurrency: {\n    shortName: \"\",\n    fullName: \"\",\n  },\n  captcha: {\n    num1: `${Math.floor(Math.random() * 20)}`,\n    num2: `${Math.floor(Math.random() * 20)}`,\n    result: \"\",\n    isValid: true,\n  },\n  receiver: \"\",\n  isValidReceiver: true,\n  email: \"\",\n  referalCode: \"\",\n  currencies: [],\n  orderInfo: null,\n};\n\nexport const exchangeSile = createSlice({\n  name: \"exchange\",\n  initialState,\n  reducers: {\n    dispatchFromCurrency: (\n      state,\n      action: PayloadAction<IInitialState[\"fromCurrency\"]>\n    ) => {\n      if (action.payload) {\n        state.fromCurrency = action.payload;\n      }\n    },\n    dispatchToCurrency: (\n      state,\n      action: PayloadAction<IInitialState[\"toCurrency\"]>\n    ) => {\n      if (action.payload) {\n        state.toCurrency = action.payload;\n      }\n    },\n    generateCaptcha: (state) => {\n      state.captcha.num1 = `${Math.floor(Math.random() * 20)}`;\n      state.captcha.num2 = `${Math.floor(Math.random() * 20)}`;\n    },\n    dispatchCaptchaResult: (state, action: PayloadAction<string>) => {\n      state.captcha.result = action.payload;\n    },\n    dispatchCaptchaIsValid: (state, action: PayloadAction<boolean>) => {\n      state.captcha.isValid = action.payload;\n    },\n    dispatchReceiver: (state, action: PayloadAction<string>) => {\n      state.receiver = action.payload;\n    },\n    dispatchIsValidReceiver: (state, action: PayloadAction<boolean>) => {\n      state.isValidReceiver = action.payload;\n    },\n    dispatchEmail: (state, action: PayloadAction<string>) => {\n      state.email = action.payload;\n    },\n    dispatchReferalCode: (state, action: PayloadAction<string>) => {\n      state.referalCode = action.payload;\n    },\n    dispatchCurrencies: (state, action: PayloadAction<ICurrency[]>) => {\n      state.currencies = action.payload;\n      state.fromCurrency = action.payload[0];\n      state.toCurrency = action.payload[1];\n    },\n    dispatchOrder: (\n      state,\n      action: PayloadAction<IInitialState[\"orderInfo\"]>\n    ) => {\n      state.orderInfo = action.payload;\n    },\n  },\n});\n\nexport const {\n  dispatchFromCurrency,\n  dispatchToCurrency,\n  generateCaptcha,\n  dispatchCaptchaResult,\n  dispatchEmail,\n  dispatchReceiver,\n  dispatchIsValidReceiver,\n  dispatchReferalCode,\n  dispatchCaptchaIsValid,\n  dispatchCurrencies,\n  dispatchOrder,\n} = exchangeSile.actions;\nexport default exchangeSile.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAmC7D,MAAMC,YAA2B,GAAG;EAClCC,YAAY,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE;EACZ,CAAC;EACDC,UAAU,EAAE;IACVF,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE;EACZ,CAAC;EACDE,OAAO,EAAE;IACPC,IAAI,EAAE,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE;IACzCC,IAAI,EAAE,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE;IACzCE,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE,EAAE;EACZC,eAAe,EAAE,IAAI;EACrBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,EAAE;EACfC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGpB,WAAW,CAAC;EACtCqB,IAAI,EAAE,UAAU;EAChBpB,YAAY;EACZqB,QAAQ,EAAE;IACRC,oBAAoB,EAAEA,CACpBC,KAAK,EACLC,MAAoD,KACjD;MACH,IAAIA,MAAM,CAACC,OAAO,EAAE;QAClBF,KAAK,CAACtB,YAAY,GAAGuB,MAAM,CAACC,OAAO;MACrC;IACF,CAAC;IACDC,kBAAkB,EAAEA,CAClBH,KAAK,EACLC,MAAkD,KAC/C;MACH,IAAIA,MAAM,CAACC,OAAO,EAAE;QAClBF,KAAK,CAACnB,UAAU,GAAGoB,MAAM,CAACC,OAAO;MACnC;IACF,CAAC;IACDE,eAAe,EAAGJ,KAAK,IAAK;MAC1BA,KAAK,CAAClB,OAAO,CAACC,IAAI,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE;MACxDc,KAAK,CAAClB,OAAO,CAACK,IAAI,GAAG,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE;IAC1D,CAAC;IACDmB,qBAAqB,EAAEA,CAACL,KAAK,EAAEC,MAA6B,KAAK;MAC/DD,KAAK,CAAClB,OAAO,CAACM,MAAM,GAAGa,MAAM,CAACC,OAAO;IACvC,CAAC;IACDI,sBAAsB,EAAEA,CAACN,KAAK,EAAEC,MAA8B,KAAK;MACjED,KAAK,CAAClB,OAAO,CAACO,OAAO,GAAGY,MAAM,CAACC,OAAO;IACxC,CAAC;IACDK,gBAAgB,EAAEA,CAACP,KAAK,EAAEC,MAA6B,KAAK;MAC1DD,KAAK,CAACV,QAAQ,GAAGW,MAAM,CAACC,OAAO;IACjC,CAAC;IACDM,uBAAuB,EAAEA,CAACR,KAAK,EAAEC,MAA8B,KAAK;MAClED,KAAK,CAACT,eAAe,GAAGU,MAAM,CAACC,OAAO;IACxC,CAAC;IACDO,aAAa,EAAEA,CAACT,KAAK,EAAEC,MAA6B,KAAK;MACvDD,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDQ,mBAAmB,EAAEA,CAACV,KAAK,EAAEC,MAA6B,KAAK;MAC7DD,KAAK,CAACP,WAAW,GAAGQ,MAAM,CAACC,OAAO;IACpC,CAAC;IACDS,kBAAkB,EAAEA,CAACX,KAAK,EAAEC,MAAkC,KAAK;MACjED,KAAK,CAACN,UAAU,GAAGO,MAAM,CAACC,OAAO;MACjCF,KAAK,CAACtB,YAAY,GAAGuB,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;MACtCF,KAAK,CAACnB,UAAU,GAAGoB,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;IACtC,CAAC;IACDU,aAAa,EAAEA,CACbZ,KAAK,EACLC,MAAiD,KAC9C;MACHD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;IAClC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXH,oBAAoB;EACpBI,kBAAkB;EAClBC,eAAe;EACfC,qBAAqB;EACrBI,aAAa;EACbF,gBAAgB;EAChBC,uBAAuB;EACvBE,mBAAmB;EACnBJ,sBAAsB;EACtBK,kBAAkB;EAClBC;AACF,CAAC,GAAGhB,YAAY,CAACiB,OAAO;AACxB,eAAejB,YAAY,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}