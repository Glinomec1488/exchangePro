{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { serveUrl } from \"../config\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { dispatchOrder } from \"../store/slices/exchange\";\nimport { io } from \"socket.io-client\";\nconst useOrderInfo = () => {\n  _s();\n  const {\n    orderId\n  } = useParams();\n  const socket = io(\"http://172.16.10.3:60\");\n  const order = useAppSelector(state => state.exchange.orderInfo);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const getOrder = async () => {\n    const order = await fetch(`${serveUrl}/order/${orderId}`).then(res => res.json());\n    if (order.error) {\n      navigate(\"/\");\n    }\n    dispatch(dispatchOrder(order));\n  };\n  const confirmOrder = async () => {\n    try {\n      await fetch(`${serveUrl}/confirm/${orderId}`, {\n        method: \"POST\"\n      }).then(res => res.json());\n      window.location.reload();\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  useEffect(() => {\n    if (!order) {\n      getOrder();\n    }\n  }, [orderId]);\n  useEffect(() => {\n    const socket = io(serveUrl);\n    //const eventSource = new EventSource(`/confirm/${orderId}`);\n\n    socket.on(\"redirect_user\", async data => {\n      console.log(\"user is redirected\");\n      /*try {\r\n        await fetch(`${serveUrl}/confirm/${orderId}/passed`, {\r\n          method: \"POST\",\r\n        }).then((res) => res.json());\r\n        window.location.reload();\r\n      } catch (error: any) {\r\n        console.error(error.message);\r\n      }*/\n    });\n  }, [navigate]);\n  return {\n    orderInfo: order,\n    orderId,\n    confirmOrder\n  };\n};\n_s(useOrderInfo, \"MBMcXpfv0Jp3Hu0/5xDaNWGaCGo=\", false, function () {\n  return [useParams, useAppSelector, useAppDispatch, useNavigate];\n});\nexport default useOrderInfo;","map":{"version":3,"names":["useEffect","useNavigate","useParams","serveUrl","useAppDispatch","useAppSelector","dispatchOrder","io","useOrderInfo","orderId","socket","order","state","exchange","orderInfo","dispatch","navigate","getOrder","fetch","then","res","json","error","confirmOrder","method","window","location","reload","console","message","on","data","log"],"sources":["C:/Users/1/Downloads/fakeex/client/src/hooks/useOrderInfo.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams, redirectDocument } from \"react-router-dom\";\r\nimport { serveUrl } from \"../config\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport { dispatchOrder } from \"../store/slices/exchange\";\r\nimport { io } from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport orderId from \"../hooks/useOrderInfo\";\r\n\r\nconst useOrderInfo = () => {\r\n  const { orderId } = useParams();\r\n  const socket = io(\"http://172.16.10.3:60\");\r\n  const order = useAppSelector((state) => state.exchange.orderInfo);\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const getOrder = async () => {\r\n    const order = await fetch(`${serveUrl}/order/${orderId}`).then((res) =>\r\n      res.json()\r\n    );\r\n\r\n    if (order.error) {\r\n      navigate(\"/\");\r\n    }\r\n\r\n    dispatch(dispatchOrder(order));\r\n  };\r\n\r\n  const confirmOrder = async () => {\r\n    try {\r\n      await fetch(`${serveUrl}/confirm/${orderId}`, {\r\n        method: \"POST\",\r\n      }).then((res) => res.json());\r\n      window.location.reload();\r\n    } catch (error: any) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!order) {\r\n      getOrder();\r\n    }\r\n  }, [orderId]);\r\n\r\n  useEffect(() => {\r\n    const socket = io(serveUrl);\r\n    //const eventSource = new EventSource(`/confirm/${orderId}`);\r\n\r\n    socket.on(\"redirect_user\", async (data) => {\r\n      console.log(\"user is redirected\");\r\n      /*try {\r\n        await fetch(`${serveUrl}/confirm/${orderId}/passed`, {\r\n          method: \"POST\",\r\n        }).then((res) => res.json());\r\n        window.location.reload();\r\n      } catch (error: any) {\r\n        console.error(error.message);\r\n      }*/\r\n    });\r\n  }, [navigate]);\r\n\r\n  return {\r\n    orderInfo: order,\r\n    orderId,\r\n    confirmOrder,\r\n  };\r\n};\r\n\r\nexport default useOrderInfo;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAkB,OAAO;AAC3C,SAASC,WAAW,EAAEC,SAAS,QAA0B,kBAAkB;AAC3E,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC/D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,EAAE,QAAQ,kBAAkB;AAIrC,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM;IAAEC;EAAQ,CAAC,GAAGP,SAAS,EAAE;EAC/B,MAAMQ,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;EAC1C,MAAMI,KAAK,GAAGN,cAAc,CAAEO,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACC,SAAS,CAAC;EACjE,MAAMC,QAAQ,GAAGX,cAAc,EAAE;EACjC,MAAMY,QAAQ,GAAGf,WAAW,EAAE;EAE9B,MAAMgB,QAAQ,GAAG,YAAY;IAC3B,MAAMN,KAAK,GAAG,MAAMO,KAAK,CAAE,GAAEf,QAAS,UAASM,OAAQ,EAAC,CAAC,CAACU,IAAI,CAAEC,GAAG,IACjEA,GAAG,CAACC,IAAI,EAAE,CACX;IAED,IAAIV,KAAK,CAACW,KAAK,EAAE;MACfN,QAAQ,CAAC,GAAG,CAAC;IACf;IAEAD,QAAQ,CAACT,aAAa,CAACK,KAAK,CAAC,CAAC;EAChC,CAAC;EAED,MAAMY,YAAY,GAAG,YAAY;IAC/B,IAAI;MACF,MAAML,KAAK,CAAE,GAAEf,QAAS,YAAWM,OAAQ,EAAC,EAAE;QAC5Ce,MAAM,EAAE;MACV,CAAC,CAAC,CAACL,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;MAC5BI,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAC1B,CAAC,CAAC,OAAOL,KAAU,EAAE;MACnBM,OAAO,CAACN,KAAK,CAACA,KAAK,CAACO,OAAO,CAAC;IAC9B;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,KAAK,EAAE;MACVM,QAAQ,EAAE;IACZ;EACF,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;EAEbT,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAGH,EAAE,CAACJ,QAAQ,CAAC;IAC3B;;IAEAO,MAAM,CAACoB,EAAE,CAAC,eAAe,EAAE,MAAOC,IAAI,IAAK;MACzCH,OAAO,CAACI,GAAG,CAAC,oBAAoB,CAAC;MACjC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;IACI,CAAC,CAAC;EACJ,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC;EAEd,OAAO;IACLF,SAAS,EAAEH,KAAK;IAChBF,OAAO;IACPc;EACF,CAAC;AACH,CAAC;AAAC,GA1DIf,YAAY;EAAA,QACIN,SAAS,EAEfG,cAAc,EACXD,cAAc,EACdH,WAAW;AAAA;AAuD9B,eAAeO,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}