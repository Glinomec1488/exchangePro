{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { serveUrl } from \"../../../../../../../config\";\nimport { useAppSelector } from \"../../../../../../../store/hooks\";\nconst config = {\n  fromCurrencyRange: {\n    from: 0.0004,\n    to: 22 // Initially set to 22 BTC; will dynamically update per selected currency\n  },\n\n  toCurrencyRange: {\n    from: 0.0004,\n    to: 22 // Initially set to 22 BTC; will dynamically update per selected currency\n  }\n};\n\nconst getFixedAmount = amount => {\n  if (amount.toFixed(7) === \"0,0000000\" || amount.toFixed(7) === \"0.0000000\") return \"0\";\n  return amount.toFixed(7);\n};\nconst getConvertedRange = async currencyShortName => {\n  try {\n    // Fetch current rates to calculate equivalent range\n    const response = await fetch(`${serveUrl}/rate/${currencyShortName}/BTC`);\n    const data = await response.json();\n    if (data.rate) {\n      const convertedMax = 22 * data.rate;\n      setCurrencyRange({\n        fromCurrencyRange: {\n          from: 0.0004,\n          to: convertedMax\n        },\n        toCurrencyRange: {\n          from: 0.0004,\n          to: convertedMax\n        }\n      });\n    }\n  } catch (error) {\n    console.error(\"Failed to fetch currency conversion rate\", error);\n  }\n};\nconst useExchangeRate = () => {\n  _s();\n  const {\n    fromCurrency,\n    toCurrency\n  } = useAppSelector(state => state.exchange);\n  const [fromCurrencyAmount, setFromCurrencyAmount] = useState(\"0.01\");\n  const [toCurrencyAmount, setToCurrencyAmount] = useState(\"\");\n  const [isChangeInput, setIsChangeInput] = useState(true);\n  const [isChangeToCurrency, setIsChangeToCurrency] = useState(false);\n  const [isChangeFromCurrency, setIsChangeFromCurrency] = useState(false);\n  const [currencyRange, setCurrencyRange] = useState(config);\n  const getExchangeRate = async (toCurrencyAmount, fromCurrencyAmount, isChangeReceiveAmount) => {\n    if (!isChangeInput || !toCurrency.shortName || !fromCurrency.shortName) return;\n    const filterShortName = input => {\n      return input.replace(/\\(.*?\\)/g, \"\").trim();\n    };\n    const noNetShrtTo = filterShortName(fromCurrency.shortName);\n    const noNetShrtFrom = filterShortName(toCurrency.shortName);\n    const isChange = isChangeReceiveAmount ? \"True\" : \"false\";\n    const newForm = await fetch(`${serveUrl}/calculator/${noNetShrtTo}/${noNetShrtFrom}/${fromCurrencyAmount || \"0.001\"}/${toCurrencyAmount || \"0.001\"}/${isChange}`, {\n      method: \"POST\"\n    }).then(res => res.json());\n    if (isChangeReceiveAmount) {\n      setFromCurrencyAmount(getFixedAmount(newForm.amount));\n    } else {\n      setToCurrencyAmount(getFixedAmount(newForm.amount));\n    }\n    setIsChangeInput(false);\n  };\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, false);\n  }, [fromCurrencyAmount, isChangeFromCurrency]);\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, true);\n  }, [toCurrencyAmount, isChangeToCurrency]);\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeFromCurrency(prev => !prev);\n  }, [fromCurrency]);\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeToCurrency(prev => !prev);\n  }, [toCurrency]);\n  const changeFromAmount = amount => {\n    if (Number(amount) <= config.fromCurrenycRange.to && Number(amount) >= config.fromCurrenycRange.from) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.fromCurrenycRange.from}`);\n    }\n  };\n  const changeToAmount = amount => {\n    if (Number(amount) <= config.toCurrenycRange.to && Number(amount) >= config.toCurrenycRange.from) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.toCurrenycRange.from}`);\n    }\n  };\n  return {\n    exchangeRate: config,\n    fromCurrencyAmount,\n    toCurrencyAmount,\n    setFromCurrencyAmount: changeFromAmount,\n    setToCurrencyAmount: changeToAmount,\n    setIsChangeInput\n  };\n};\n_s(useExchangeRate, \"T4zl82OM7D5JGuevLC/D5OhLysc=\", false, function () {\n  return [useAppSelector];\n});\nexport default useExchangeRate;","map":{"version":3,"names":["useEffect","useState","serveUrl","useAppSelector","config","fromCurrencyRange","from","to","toCurrencyRange","getFixedAmount","amount","toFixed","getConvertedRange","currencyShortName","response","fetch","data","json","rate","convertedMax","setCurrencyRange","error","console","useExchangeRate","fromCurrency","toCurrency","state","exchange","fromCurrencyAmount","setFromCurrencyAmount","toCurrencyAmount","setToCurrencyAmount","isChangeInput","setIsChangeInput","isChangeToCurrency","setIsChangeToCurrency","isChangeFromCurrency","setIsChangeFromCurrency","currencyRange","getExchangeRate","isChangeReceiveAmount","shortName","filterShortName","input","replace","trim","noNetShrtTo","noNetShrtFrom","isChange","newForm","method","then","res","prev","changeFromAmount","Number","fromCurrenycRange","changeToAmount","toCurrenycRange","exchangeRate"],"sources":["C:/Users/1/Downloads/naebalovo.com/client/src/screens/home/components/exchange/components/form/hooks/useExchangeRate.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { serveUrl } from \"../../../../../../../config\";\nimport { useAppSelector } from \"../../../../../../../store/hooks\";\n\nconst config = {\n  fromCurrencyRange: {\n    from: 0.0004,\n    to: 22, // Initially set to 22 BTC; will dynamically update per selected currency\n  },\n  toCurrencyRange: {\n    from: 0.0004,\n    to: 22, // Initially set to 22 BTC; will dynamically update per selected currency\n  },\n};\n\nconst getFixedAmount = (amount: number) => {\n  if (amount.toFixed(7) === \"0,0000000\" || amount.toFixed(7) === \"0.0000000\")\n    return \"0\";\n  return amount.toFixed(7);\n};\n\nconst getConvertedRange = async (currencyShortName) => {\n  try {\n    // Fetch current rates to calculate equivalent range\n    const response = await fetch(`${serveUrl}/rate/${currencyShortName}/BTC`);\n    const data = await response.json();\n\n    if (data.rate) {\n      const convertedMax = 22 * data.rate;\n      setCurrencyRange({\n        fromCurrencyRange: { from: 0.0004, to: convertedMax },\n        toCurrencyRange: { from: 0.0004, to: convertedMax },\n      });\n    }\n  } catch (error) {\n    console.error(\"Failed to fetch currency conversion rate\", error);\n  }\n};\n\nconst useExchangeRate = () => {\n  const { fromCurrency, toCurrency } = useAppSelector(\n    (state) => state.exchange\n  );\n\n  const [fromCurrencyAmount, setFromCurrencyAmount] = useState(\"0.01\");\n  const [toCurrencyAmount, setToCurrencyAmount] = useState(\"\");\n  const [isChangeInput, setIsChangeInput] = useState(true);\n  const [isChangeToCurrency, setIsChangeToCurrency] = useState(false);\n  const [isChangeFromCurrency, setIsChangeFromCurrency] = useState(false);\n  const [currencyRange, setCurrencyRange] = useState(config);\n\n  const getExchangeRate = async (\n    toCurrencyAmount: string,\n    fromCurrencyAmount: string,\n    isChangeReceiveAmount: boolean\n  ) => {\n    if (!isChangeInput || !toCurrency.shortName || !fromCurrency.shortName)\n      return;\n\n    const filterShortName = (input: string) => {\n      return input.replace(/\\(.*?\\)/g, \"\").trim();\n    };\n\n    const noNetShrtTo = filterShortName(fromCurrency.shortName);\n    const noNetShrtFrom = filterShortName(toCurrency.shortName);\n\n    const isChange = isChangeReceiveAmount ? \"True\" : \"false\";\n    const newForm = await fetch(\n      `${serveUrl}/calculator/${noNetShrtTo}/${noNetShrtFrom}/${\n        fromCurrencyAmount || \"0.001\"\n      }/${toCurrencyAmount || \"0.001\"}/${isChange}`,\n      {\n        method: \"POST\",\n      }\n    ).then((res) => res.json());\n\n    if (isChangeReceiveAmount) {\n      setFromCurrencyAmount(getFixedAmount(newForm.amount));\n    } else {\n      setToCurrencyAmount(getFixedAmount(newForm.amount));\n    }\n    setIsChangeInput(false);\n  };\n\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, false);\n  }, [fromCurrencyAmount, isChangeFromCurrency]);\n\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, true);\n  }, [toCurrencyAmount, isChangeToCurrency]);\n\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeFromCurrency((prev) => !prev);\n  }, [fromCurrency]);\n\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeToCurrency((prev) => !prev);\n  }, [toCurrency]);\n\n  const changeFromAmount = (amount: string) => {\n    if (\n      Number(amount) <= config.fromCurrenycRange.to &&\n      Number(amount) >= config.fromCurrenycRange.from\n    ) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.fromCurrenycRange.from}`);\n    }\n  };\n\n  const changeToAmount = (amount: string) => {\n    if (\n      Number(amount) <= config.toCurrenycRange.to &&\n      Number(amount) >= config.toCurrenycRange.from\n    ) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.toCurrenycRange.from}`);\n    }\n  };\n\n  return {\n    exchangeRate: config,\n    fromCurrencyAmount,\n    toCurrencyAmount,\n    setFromCurrencyAmount: changeFromAmount,\n    setToCurrencyAmount: changeToAmount,\n    setIsChangeInput,\n  };\n};\n\nexport default useExchangeRate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}