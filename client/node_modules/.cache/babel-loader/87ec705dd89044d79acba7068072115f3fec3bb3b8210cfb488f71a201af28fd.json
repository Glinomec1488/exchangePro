{"ast":null,"code":"import{useEffect,useState}from\"react\";import{serveUrl}from\"../../../../../../../config\";import{useAppSelector}from\"../../../../../../../store/hooks\";import{setIsLoaded}from\"..\";const getFixedAmount=amount=>{if(amount.toFixed(6)===\"0,000000\"||amount.toFixed(6)===\"0.000000\")return\"0\";return amount.toFixed(7);};const ranges={BTC:{min:0.0001,max:100},ETH:{min:0.02,max:1000},BNB:{min:0.08,max:1000},BCH:{min:0.15,max:1000},ZEC:{min:1,max:1488},FTM:{min:74,max:10090},SOL:{min:0.3,max:1001},LTC:{min:0.77,max:1021},TRX:{min:293,max:1900530},ZRX:{min:157,max:100063},XRP:{min:92,max:10000},USDT:{min:44,max:106051},ADA:{min:141,max:100000},XTZ:{min:72,max:100067},XMR:{min:0.3,max:1055},DASH:{min:2.1,max:10083},DOGE:{min:449,max:1220000},DOT:{min:11,max:100554}};const filterShortName=input=>{return input.replace(/\\(.*?\\)/g,\"\").trim();};const useExchangeRate=()=>{const{fromCurrency,toCurrency}=useAppSelector(state=>state.exchange);const[fromCurrencyAmount,setFromCurrencyAmount]=useState(\"1\");const[toCurrencyAmount,setToCurrencyAmount]=useState(\"\");const[isChangeInput,setIsChangeInput]=useState(true);const[isChangeToCurrency,setIsChangeToCurrency]=useState(false);const[isChangeFromCurrency,setIsChangeFromCurrency]=useState(false);const noNetShrtTo=filterShortName(fromCurrency.shortName);const noNetShrtFrom=filterShortName(toCurrency.shortName);const[minAmount,setMinAmount]=useState(1);const[maxAmount,setMaxAmount]=useState(1);const getExchangeRate=async(toCurrencyAmount,fromCurrencyAmount,isChangeReceiveAmount)=>{if(!isChangeInput||!toCurrency.shortName||!fromCurrency.shortName)return;const isChange=isChangeReceiveAmount?\"True\":\"false\";setIsLoaded(false);try{const newForm=await fetch(`${serveUrl}/calculator/${noNetShrtTo}/${noNetShrtFrom}/${fromCurrencyAmount||\"0.01\"}/${toCurrencyAmount||\"0.01\"}/${isChange}`,{method:\"POST\"}).then(res=>res.json());/*if (isChangeReceiveAmount) {\n        setFromCurrencyAmount(getFixedAmount(newForm.amount));\n      } else {*/setToCurrencyAmount(getFixedAmount(newForm.amount));//}\nsetIsChangeInput(false);}catch(error){console.error(\"Error fetching data:\",error);// Optionally handle any errors if needed\n}setIsLoaded(true);};const getFromCurrencyRange=currency=>{return ranges[currency]||{min:\"0\",max:\"0\"};// Default range if currency is not found\n};useEffect(()=>{getExchangeRate(toCurrencyAmount,fromCurrencyAmount,false);},[fromCurrencyAmount,isChangeFromCurrency]);useEffect(()=>{getExchangeRate(toCurrencyAmount,fromCurrencyAmount,false);},[toCurrencyAmount,isChangeToCurrency]);useEffect(()=>{setIsChangeInput(true);setIsChangeFromCurrency(prev=>!prev);},[fromCurrency]);useEffect(()=>{setIsChangeInput(true);setIsChangeToCurrency(prev=>!prev);},[toCurrency]);useEffect(()=>{if(noNetShrtTo){const range=getFromCurrencyRange(noNetShrtTo);setMinAmount(range.min);setMaxAmount(range.max);}},[fromCurrency]);const config={fromCurrenycRange:{from:minAmount,to:maxAmount},toCurrenycRange:{from:0,to:0}};const changeFromAmount=amount=>{if(Number(amount)<=config.fromCurrenycRange.to&&Number(amount)>=config.fromCurrenycRange.from){setFromCurrencyAmount(amount);}else{setFromCurrencyAmount(`${config.fromCurrenycRange.from}`);}};const changeToAmount=amount=>{if(Number(amount)<=config.toCurrenycRange.to&&Number(amount)>=config.toCurrenycRange.from){setToCurrencyAmount(amount);}else{setToCurrencyAmount(`${config.toCurrenycRange.from}`);}};return{exchangeRate:config,fromCurrencyAmount,toCurrencyAmount,setFromCurrencyAmount:changeFromAmount,setToCurrencyAmount:changeToAmount,setIsChangeInput};};export default useExchangeRate;","map":{"version":3,"names":["useEffect","useState","serveUrl","useAppSelector","setIsLoaded","getFixedAmount","amount","toFixed","ranges","BTC","min","max","ETH","BNB","BCH","ZEC","FTM","SOL","LTC","TRX","ZRX","XRP","USDT","ADA","XTZ","XMR","DASH","DOGE","DOT","filterShortName","input","replace","trim","useExchangeRate","fromCurrency","toCurrency","state","exchange","fromCurrencyAmount","setFromCurrencyAmount","toCurrencyAmount","setToCurrencyAmount","isChangeInput","setIsChangeInput","isChangeToCurrency","setIsChangeToCurrency","isChangeFromCurrency","setIsChangeFromCurrency","noNetShrtTo","shortName","noNetShrtFrom","minAmount","setMinAmount","maxAmount","setMaxAmount","getExchangeRate","isChangeReceiveAmount","isChange","newForm","fetch","method","then","res","json","error","console","getFromCurrencyRange","currency","prev","range","config","fromCurrenycRange","from","to","toCurrenycRange","changeFromAmount","Number","changeToAmount","exchangeRate"],"sources":["C:/Users/1/Videos/exchangePro-main/client/src/screens/home/components/exchange/components/form/hooks/useExchangeRate.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { serveUrl } from \"../../../../../../../config\";\nimport { useAppSelector } from \"../../../../../../../store/hooks\";\nimport { setIsLoaded } from \"..\";\n\nconst getFixedAmount = (amount: number) => {\n  if (amount.toFixed(6) === \"0,000000\" || amount.toFixed(6) === \"0.000000\")\n    return \"0\";\n  return amount.toFixed(7);\n};\nconst ranges: Record<string, { min: number; max: number }> = {\n  BTC: { min: 0.0001, max: 100 },\n  ETH: { min: 0.02, max: 1000 },\n  BNB: { min: 0.08, max: 1000 },\n  BCH: { min: 0.15, max: 1000 },\n  ZEC: { min: 1, max: 1488 },\n  FTM: { min: 74, max: 10090 },\n  SOL: { min: 0.3, max: 1001 },\n  LTC: { min: 0.77, max: 1021 },\n  TRX: { min: 293, max: 1900530 },\n  ZRX: { min: 157, max: 100063 },\n  XRP: { min: 92, max: 10000 },\n  USDT: { min: 44, max: 106051 },\n  ADA: { min: 141, max: 100000 },\n  XTZ: { min: 72, max: 100067 },\n  XMR: { min: 0.3, max: 1055 },\n  DASH: { min: 2.1, max: 10083 },\n  DOGE: { min: 449, max: 1220000 },\n  DOT: { min: 11, max: 100554 },\n};\n\nconst filterShortName = (input: string) => {\n  return input.replace(/\\(.*?\\)/g, \"\").trim();\n};\n\nconst useExchangeRate = () => {\n  const { fromCurrency, toCurrency } = useAppSelector(\n    (state) => state.exchange\n  );\n\n  const [fromCurrencyAmount, setFromCurrencyAmount] = useState(\"1\");\n  const [toCurrencyAmount, setToCurrencyAmount] = useState(\"\");\n  const [isChangeInput, setIsChangeInput] = useState(true);\n  const [isChangeToCurrency, setIsChangeToCurrency] = useState(false);\n  const [isChangeFromCurrency, setIsChangeFromCurrency] = useState(false);\n  const noNetShrtTo = filterShortName(fromCurrency.shortName);\n  const noNetShrtFrom = filterShortName(toCurrency.shortName);\n  const [minAmount, setMinAmount] = useState(1);\n  const [maxAmount, setMaxAmount] = useState(1);\n\n  const getExchangeRate = async (\n    toCurrencyAmount: string,\n    fromCurrencyAmount: string,\n    isChangeReceiveAmount: boolean\n  ) => {\n    if (!isChangeInput || !toCurrency.shortName || !fromCurrency.shortName)\n      return;\n    const isChange = isChangeReceiveAmount ? \"True\" : \"false\";\n    setIsLoaded(false);\n    try {\n      const newForm = await fetch(\n        `${serveUrl}/calculator/${noNetShrtTo}/${noNetShrtFrom}/${\n          fromCurrencyAmount || \"0.01\"\n        }/${toCurrencyAmount || \"0.01\"}/${isChange}`,\n        {\n          method: \"POST\",\n        }\n      ).then((res) => res.json());\n\n      /*if (isChangeReceiveAmount) {\n        setFromCurrencyAmount(getFixedAmount(newForm.amount));\n      } else {*/\n      setToCurrencyAmount(getFixedAmount(newForm.amount));\n      //}\n      setIsChangeInput(false);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      // Optionally handle any errors if needed\n    }\n    setIsLoaded(true);\n  };\n\n  const getFromCurrencyRange = (currency: string) => {\n    return ranges[currency] || { min: \"0\", max: \"0\" }; // Default range if currency is not found\n  };\n\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, false);\n  }, [fromCurrencyAmount, isChangeFromCurrency]);\n\n  useEffect(() => {\n    getExchangeRate(toCurrencyAmount, fromCurrencyAmount, false);\n  }, [toCurrencyAmount, isChangeToCurrency]);\n\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeFromCurrency((prev) => !prev);\n  }, [fromCurrency]);\n\n  useEffect(() => {\n    setIsChangeInput(true);\n    setIsChangeToCurrency((prev) => !prev);\n  }, [toCurrency]);\n\n  useEffect(() => {\n    if (noNetShrtTo) {\n      const range = getFromCurrencyRange(noNetShrtTo);\n      setMinAmount(range.min);\n      setMaxAmount(range.max);\n    }\n  }, [fromCurrency]);\n\n  const config = {\n    fromCurrenycRange: {\n      from: minAmount,\n      to: maxAmount,\n    },\n    toCurrenycRange: {\n      from: 0,\n      to: 0,\n    },\n  };\n\n  const changeFromAmount = (amount: string) => {\n    if (\n      Number(amount) <= config.fromCurrenycRange.to &&\n      Number(amount) >= config.fromCurrenycRange.from\n    ) {\n      setFromCurrencyAmount(amount);\n    } else {\n      setFromCurrencyAmount(`${config.fromCurrenycRange.from}`);\n    }\n  };\n\n  const changeToAmount = (amount: string) => {\n    if (\n      Number(amount) <= config.toCurrenycRange.to &&\n      Number(amount) >= config.toCurrenycRange.from\n    ) {\n      setToCurrencyAmount(amount);\n    } else {\n      setToCurrencyAmount(`${config.toCurrenycRange.from}`);\n    }\n  };\n  return {\n    exchangeRate: config,\n    fromCurrencyAmount,\n    toCurrencyAmount,\n    setFromCurrencyAmount: changeFromAmount,\n    setToCurrencyAmount: changeToAmount,\n    setIsChangeInput,\n  };\n};\n\nexport default useExchangeRate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}