{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { serveUrl } from \"../../../../../../../config\";\nimport { useAppDispatch, useAppSelector } from \"../../../../../../../store/hooks\";\nimport { dispatchCaptchaIsValid, dispatchIsValidReceiver, dispatchOrder, generateCaptcha } from \"../../../../../../../store/slices/exchange\";\nconst useForm = () => {\n  _s();\n  const {\n    captcha,\n    email,\n    receiver,\n    fromCurrency,\n    toCurrency\n  } = useAppSelector(state => state.exchange);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const validateCaptcha = () => {\n    if (Number(captcha.num1) + Number(captcha.num2) === Number(captcha.result)) {\n      dispatch(dispatchCaptchaIsValid(true));\n      return true;\n    }\n    dispatch(dispatchCaptchaIsValid(false));\n    dispatch(generateCaptcha());\n    return false;\n  };\n  const validateReceiver = () => {\n    const regex = /^[A-Za-z0-9]{5,100}$/; //^[A-Za-z0-9]{5,100}[0-9a-fA-F]+$/i; //^(0x){1}[0-9a-fA-F]{40}$/i;\n\n    if (regex.test(receiver)) {\n      dispatch(dispatchIsValidReceiver(true));\n      return true;\n    }\n    dispatch(dispatchIsValidReceiver(false));\n    return false;\n  };\n  const sendForm = async (e, sendAmount, receiveAmount) => {\n    try {\n      e.preventDefault();\n      const isValidCaptcha = validateCaptcha();\n      const isValidReceiver = validateReceiver();\n      if (!isValidCaptcha || !isValidReceiver) return null;\n      const referalCode = localStorage.getItem(\"ref\");\n      const res = await fetch(`${serveUrl}/newOrder/${receiveAmount}/${toCurrency.shortName}/${sendAmount}/${fromCurrency.shortName}/${receiver}/${email}/${referalCode || \"null\"}/pending`, {\n        method: \"GET\"\n      }).then(res => res.json());\n      if (res.orderId) {\n        const order = await fetch(`${serveUrl}/order/${res.orderId}`).then(res => res.json());\n        dispatch(dispatchOrder(order));\n        navigate(`/order/${res.orderId}`);\n      } else {\n        throw new Error(\"something went wrong with order id\");\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return {\n    sendForm\n  };\n};\n_s(useForm, \"b9FunSHZtWmnfHxfd2Uo6iFqmQM=\", false, function () {\n  return [useAppSelector, useAppDispatch, useNavigate];\n});\nexport default useForm;","map":{"version":3,"names":["useNavigate","serveUrl","useAppDispatch","useAppSelector","dispatchCaptchaIsValid","dispatchIsValidReceiver","dispatchOrder","generateCaptcha","useForm","captcha","email","receiver","fromCurrency","toCurrency","state","exchange","dispatch","navigate","validateCaptcha","Number","num1","num2","result","validateReceiver","regex","test","sendForm","e","sendAmount","receiveAmount","preventDefault","isValidCaptcha","isValidReceiver","referalCode","localStorage","getItem","res","fetch","shortName","method","then","json","orderId","order","Error","error","console","message"],"sources":["C:/Users/1/Videos/exchangePro-main/client/src/screens/home/components/exchange/components/form/hooks/useForm.ts"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { serveUrl } from \"../../../../../../../config\";\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from \"../../../../../../../store/hooks\";\nimport {\n  dispatchCaptchaIsValid,\n  dispatchIsValidReceiver,\n  dispatchOrder,\n  generateCaptcha,\n} from \"../../../../../../../store/slices/exchange\";\n\nconst useForm = () => {\n  const { captcha, email, receiver, fromCurrency, toCurrency } = useAppSelector(\n    (state) => state.exchange\n  );\n\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const validateCaptcha = () => {\n    if (\n      Number(captcha.num1) + Number(captcha.num2) ===\n      Number(captcha.result)\n    ) {\n      dispatch(dispatchCaptchaIsValid(true));\n      return true;\n    }\n\n    dispatch(dispatchCaptchaIsValid(false));\n    dispatch(generateCaptcha());\n    return false;\n  };\n\n  const validateReceiver = () => {\n    const regex = /^[A-Za-z0-9]{5,100}$/; //^[A-Za-z0-9]{5,100}[0-9a-fA-F]+$/i; //^(0x){1}[0-9a-fA-F]{40}$/i;\n\n    if (regex.test(receiver)) {\n      dispatch(dispatchIsValidReceiver(true));\n      return true;\n    }\n\n    dispatch(dispatchIsValidReceiver(false));\n    return false;\n  };\n\n  const sendForm = async (\n    e: React.FormEvent<HTMLFormElement>,\n    sendAmount: string,\n    receiveAmount: string\n  ) => {\n    try {\n      e.preventDefault();\n\n      const isValidCaptcha = validateCaptcha();\n      const isValidReceiver = validateReceiver();\n\n      if (!isValidCaptcha || !isValidReceiver) return null;\n\n      const referalCode = localStorage.getItem(\"ref\");\n\n      const res = await fetch(\n        `${serveUrl}/newOrder/${receiveAmount}/${\n          toCurrency.shortName\n        }/${sendAmount}/${fromCurrency.shortName}/${receiver}/${email}/${\n          referalCode || \"null\"\n        }/pending`,\n        {\n          method: \"GET\",\n        }\n      ).then((res) => res.json());\n\n      if (res.orderId) {\n        const order = await fetch(`${serveUrl}/order/${res.orderId}`).then(\n          (res) => res.json()\n        );\n\n        dispatch(dispatchOrder(order));\n\n        navigate(`/order/${res.orderId}`);\n      } else {\n        throw new Error(\"something went wrong with order id\");\n      }\n    } catch (error: any) {\n      console.error(error.message);\n    }\n  };\n\n  return {\n    sendForm,\n  };\n};\n\nexport default useForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}